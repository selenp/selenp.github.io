<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jeff&#39;s eHandbook</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-05T13:58:52.437Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jeff_Gao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>女生可以对男朋友心机到什么程度？</title>
    <link href="http://yoursite.com/2018/07/04/zhihu/"/>
    <id>http://yoursite.com/2018/07/04/zhihu/</id>
    <published>2018-07-04T02:00:00.000Z</published>
    <updated>2018-07-05T13:58:52.437Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><a id="more"></a><p><center><h2>传送门👉：<a href="https://www.zhihu.com/question/271441134/answer/433537406" target="_blank" rel="noopener"> Cindy 李的回答</a></h2></center><br></p><p>前两天给我妈讲我跟男朋友是怎么在一起的，讲完后我妈说我根本不是她的女儿，我怎么会这么有心机，都是跟谁学的？…</p><p>问题是，我一个相貌平平才华平平啥都平平的女生，想撩到一个很帅的男孩子，不心机一点怎么成功啊！！</p><p>我下文太啰嗦，总结一下其实就是：一开始要让对方觉得亏欠自己；要好好表现自己的优点，没有优点也要创造优点；要给对方一点危机感，没有危机也要创造危机😃</p><hr><p><span id="inline-toc">1.</span>头一天晚上跟一个异性朋友吃饭，我说起最近想找个男朋友，让他有帅哥一定要介绍给我。他说：诶我明天就要跟一个帅哥逛街，咱们一起呗？我说好的，那我明天开车接上他（他们都刚到美国还没买车），让他一开始就觉得欠我的：）于是第二天就直接去了帅哥的学校接上了帅哥。</p><p><span id="inline-toc">2.</span>其实那天帅哥不知道有妹子存在，就很随意的穿了个大裤衩大t恤就出来了，而且还有点害羞，但我还是一眼就看了出来！嗯！这就是我想要的人！于是立刻决定，今天的所有开销都老子来！他们再拒绝也要老子来！开车我来停车费我来吃饭钱也都我来！让帅哥不好意思这样才有理由以后请回我！事实证明这样做是很正确的，吃饭抢着结账时帅哥差点急了，最后我一句“没事，下次你请我不就好啦～”轻松把他噎回去。</p><p><span id="inline-toc">3.</span>虽然他们说是逛街，其实俩人都没什么可买的。我那天正好穿了一件嫩粉粉的飞行员夹克（不是正好，是成心的，因为事先不知道他会喜欢什么风格，这么穿就既甜美又运动），我就拉着他俩去帽子店买棒球帽，戴上之后找了个最好看的角度问帅哥好看不，帅哥结结巴巴地说好看…</p><p><span id="inline-toc">4.</span>吃完饭本来就要散了，我不想这么早放帅哥走，急中生智邀请他俩参观我的大学（就在餐厅旁边），于是我们仨就在大晚上夜游了一下波士顿大学和查尔斯河…还专门挑的人少气氛佳的地方。</p><p><span id="inline-toc">5.</span>第一次见面以我最后单独送帅哥回家为结束（我的助攻是真的懂事），路上我就开始套话，什么现在有没有女朋友啊，之前为什么分了啊，来了美国还想不想找啊，还顺带着半开玩笑半认真的说了一句“你无聊可以多约我啊，反正我大四了挺闲的。”哦顺便通过这次知道了帅哥家住哪里。</p><p><span id="inline-toc">6.</span>第一次见面后帅哥开始时不时跟我发微信，我就跟他抱怨自己马上要考gre了可还什么都不会，考什么都不知道。正好他前不久刚考过这个考试，还为此专门上过课，我就提出来让他考前一晚上指导一下我。于是就有了第二次见面…</p><p><span id="inline-toc">7.</span>第二次见面我直接很憔悴地就出现了，为了体现一下我学习有多努力…然后他开始给我讲gre考试是个什么套路，结果发现我完全0基础…我说算了我还是背背鸡精单词吧，于是拿出了我其实提前背过一遍的1000多个单词，假装是第一次背，然后让他考我，结果他发现我正确率100%，当场惊了，疯狂夸我聪明。</p><p><span id="inline-toc">8.</span>其实帅哥对我第二天的考试，期望是很低的，因为我是真的0基础，完全没接受过培训…但其实我自己心里很清楚，好歹我在美国上了四年学，就算裸考也不会太差。所以跟他约定，如果考上了320（满分340，320申请一个好的研究生就差不太多了），我就请他吃饭，没考过就请我吃饭，结果我果然考过了320…就再一次请他吃了饭，还专门点的贵的，什么龙虾之类的，美其名曰为我庆祝考的不错，其实还是为了让他觉得欠我的，让他想办法弥补我。</p><p><span id="inline-toc">10.</span>考试那天知道要见帅哥，想想前几次见面都比较运动，所以考前特意换上了小短裙，露着大白腿就去考试了，差点没给我冻死。吃完饭帅哥邀请我去看电影，还看的鬼片，全程又冷又怕。本来在我的计划里，帅哥看我这样肯定会来抱抱我或者把衣服给我什么的，没想到那天电影的剧场是豪华座椅，每个人之间都超级远……md真是人算不如天算。</p><p><span id="inline-toc">11.</span>后来帅哥总是邀请我一起图书馆自习，可即使我整天跟他打一把伞，手时不时就假装不小心碰一下他的，即使我整天在聪明学霸和撒娇小女人之间来回变换，我们的关系都迟迟没有更进一步。最后我终于受不了了，有一次一个学长邀请我第二天吃饭，我就告诉帅哥了，并且顺便夸大了一下我跟学长的关系，给他一种再不把我拿下我就要被抢走了的感觉…结果中午刚说完，下午他就跟我表白了…不过这么做唯一的缺点就是，他后来非逼着我把学长给删了…</p><p><span id="inline-toc">12.</span>之后就是很甜的开始恋爱啦！帅哥虽然很聪明心思也很细腻，但是胆子太小，总怕我们关系进展太快会不好。所以第一次接吻，第一次一起睡觉…都是被我套路来的😃懒得写了打字好累😭</p><hr><p>总有人说套路得来的感情不真诚，但还是要看是什么样的人吧。我一个理科生不太会讲话，但反正，现在已经是男朋友的帅哥，跟我好了快一年了，每天都把我宠上天，一次架都没吵过，我刚开始生气他就马上娇滴滴地认错。啧啧啧，活到这么大还从来没像现在这么幸福过。</p><p>好像有点跑题…不过算啦算啦反正也没人能看见😋</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt; Cindy 在知乎上对于这个问题的回答，只能说太秀了&lt;/center&gt;
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="情感" scheme="http://yoursite.com/tags/%E6%83%85%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>这个难熬的夏天</title>
    <link href="http://yoursite.com/2018/07/01/18summer/"/>
    <id>http://yoursite.com/2018/07/01/18summer/</id>
    <published>2018-07-01T02:00:00.000Z</published>
    <updated>2018-07-04T03:40:09.176Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><a id="more"></a><p>&nbsp;&nbsp;&nbsp;&nbsp;在经历 Cindy 的本科毕业典礼之后，我们分别回到了各自的老家，开始了漫长难熬的暑假生活。因为 Jeff 面临着明年5月毕业找工作的问题，所以这个暑假的实习经历显得尤为重要，在父母的帮助下，我顺利加入了 Accenture 的 IT 部门，成为了 ISA 项目的暑期实习生；当然 Cindy 的暑假也安排的也很充实有意义，她选择报名网课，趁着时间充足在研究生阶段之前多学习一些有用的工具。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;18年的暑假虽然和往常一样炎热，但是四年一度的世界杯在百无聊赖的酷热中给 Jeff 的生活带来了一丝希望。当然最能鼓励着他奋斗下去的，除了每天一瓶的 diet coke, 就是6月底由大连开往北京南的火车票了。<br></p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/18summer/1.jpg" style="width:100%;height:auto;"></div></p><center><h2>还不错的软卧</h2></center><br>&nbsp;&nbsp;&nbsp;&nbsp;Jeff的默认工作时间是8：30 am - 5:30 pm , 在我刚出办公室准备掏出手机打车的时候，就远远的看到了来接我去大连站的爸妈😄，他们怕我赶不上8点整的火车，特意赶过来送我一程。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;在家洗了澡，吃了水饺（北方人有上船饺子，下船面的习俗）后就早早的来到候车厅等车了。<br><div style="width:600px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/18summer/2.jpg" style="width:100%;height:auto;"></div><br>&nbsp;&nbsp;&nbsp;&nbsp;因为从没坐过软卧，所以我这次想要尝试一下，软卧每个舱室有四张床，上下铺结构，虽然卫生条件依然不是很理想，但是相比硬卧已经优秀太多了。我们房间有一对来大连游玩的夫妇和一位阿姨，<br><center> <a class="btn" href="https://youtu.be/MG32o8OSKuw" target="_blank" rel="noopener"><i class="fa fa-youtube fa-fw"></i>Youtube</a><span class="label default">三里屯 - 客从何处来</span></center>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;个人日记，随便写写&lt;/center&gt;
    
    </summary>
    
      <category term="旅游文" scheme="http://yoursite.com/categories/%E6%97%85%E6%B8%B8%E6%96%87/"/>
    
    
      <category term="Beijing" scheme="http://yoursite.com/tags/Beijing/"/>
    
      <category term="Dalian" scheme="http://yoursite.com/tags/Dalian/"/>
    
  </entry>
  
  <entry>
    <title>I won&#39;t let you down</title>
    <link href="http://yoursite.com/2018/06/28/iwontletudown/"/>
    <id>http://yoursite.com/2018/06/28/iwontletudown/</id>
    <published>2018-06-28T02:00:00.000Z</published>
    <updated>2018-06-28T11:49:30.165Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div style="width:600px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/jefflogo.gif" style="width:100%;height:auto;"></div></p><center><div class="video-container"><br><iframe height="80%" width="80%" src="//player.bilibili.com/player.html?aid=1674966&cid=2552778&page=1" frameborder="0" allowfullscreen></iframe></div><br></center>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;之前的微博看到的 OKGO 的一镜到底 mv , 感觉很酷&lt;/center&gt;
    
    </summary>
    
      <category term="个人分享" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Jeff&#39;s recommendation" scheme="http://yoursite.com/tags/Jeff-s-recommendation/"/>
    
      <category term="Video" scheme="http://yoursite.com/tags/Video/"/>
    
  </entry>
  
  <entry>
    <title>大白话解释 Git 和 GitHub</title>
    <link href="http://yoursite.com/2018/06/23/study2/"/>
    <id>http://yoursite.com/2018/06/23/study2/</id>
    <published>2018-06-23T02:00:00.000Z</published>
    <updated>2018-06-25T02:24:53.286Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><a id="more"></a><p><img src="/pics/study2/logo.gif" alt="logo"></p><p></p><h2>写本文的动机</h2><br>学习任何东西都能在网络上找到如此之多的指导教程，这一直令我惊讶不已。Git 和 Github 也不例外，网络上有大量优秀资源，这些资源要么只对其中一个，要么兼顾二者引导你开始学习。以下是我特别喜欢的一些资源：<p></p><ul><br><li><a href="http://blog.teamtreehouse.com/git-for-designers-part-1" target="_blank" rel="noopener">Treehouse – 写给设计师的 Git 入门介绍</a></li><br><li><a href="http://rogerdudler.github.io/git-guide/" target="_blank" rel="noopener">Roger Dudler – Git 简易教程</a></li><br><li><a href="https://www.pluralsight.com/blog/software-development/github-tutorial" target="_blank" rel="noopener">Pluralsight – Github：初学者指南</a></li></ul><br>然而，我发现这些教程总是跳过许多理论知识，直接解释如何通过命令行或 Github 桌面应用程序使用 Git 。坦白说，如果你只是想知道你的开发团队谈论的到底是什么，这些指导教程也绰绰有余了。如上所述，我的目标是对版本控制的整体概念进行简明扼要地讲解，同时希望能让你了解到版本控制是如此酷。<br><h2>让我们从最基础的开始：版本控制</h2><br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/1.jpg" style="width:100%;height:auto;"></div><br>版本控制（Version control）:学习它，爱上它，享受它。顾名思义，<b>版本控制系统是任何能让你了解到一个文件的历史，以及它的发展过程的系统。</b>之前作为平面设计师时，我常常会遇到这种文件：<br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/2.jpg" style="width:100%;height:auto;"></div><br>看起来眼熟？尽管上述系统不是一个好用的系统 ，但它确实是一个版本控制系统。更复杂点的例子就像，Google 文档的 “修订历史”或  Photoshop 的“历史”工具。<br><h2>开始 Git</h2><br><b>Git 是一种专为处理文本文件而设计的版本控制系统。</b>因为，归根到底，这就是代码的本质：一堆堆以某种方式联合在一起的文本文件。Git 是一个可安装应用，它允许你对你自己所做的更改进行注释，用以创建易于导航的系统历史。<br><br>（附： “Git”  也是工程师取的名字，我们对市场部同仁感到抱歉）<br><br><b>那么， Git 做了什么，是简单地保存文件所做不到的呢？</b>从根本上讲，文件保存就是一个简化的版本控制系统，但坦率地说，它并不是一个好用的系统，因为它只能前进。当然，你也许会争论“撤消”按钮可以让你的文件回滚到以前的状态。但我们都清楚，“撤消”按钮有其局限性，最明显示的是，在关闭文件时，文件的过去也随之丢失。<br><br>另外，文件保存是非常个人化的。它不能够显示整个系统的历史，只能够显示该文件的。针对这一点，你可能会想，“嗯，我不是一个工程师，我不需要为系统烦恼”。我愿意花些时间来解释一下，很多事情你认为不是“系统”，而实际上它们就是。<br><br><b>以  Sally 为例，她是一个正在写下一个大冒险奇幻小说系列的作家。</b>Sally 已经写完该系列小说中的第一本，并把它传给了她的编辑。此外，由于她才华出众，在等待编辑的反馈的同时，她还写了第二本书的前三章。每本书都建立了独立的 Word 文件。<br><br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/3.jpg" style="width:100%;height:auto;"></div><br>在某个快乐的日子，Sally  等来了她的编辑关于第一本书的反馈。他担心年轻的读者不想读一系列专写兽人故事的书，希望她在这个故事中引入一些精灵。关于这点，Sally  叹了口气，但很快意识到，她的精灵新角色将带来始料未及的冲突和曲折的情节。然后，她做了以下事情：<br><ul><br><li>在第一本书中加入新角色，并修改故事情节。</li><br><li>完成第一本书之后，对第二本书的故事情节，进行必要的修改。</li><br><li>所有的这些修改，导致她需要引入某个地理位置到第一本书中，而不是第二本书。</li><br><li>重新编辑第一本书，让它包含新的地理位置。</li></ul><br>终于，她推开了她的键盘，确信已经把精灵融入到了她的奇幻世界之中。<br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/4.jpg" style="width:100%;height:auto;"></div><br>你瞧，Sally 实际上在处理一个系统。她的两本书互相影响。角色、地理位置和故事情节在两本书中流动交织。然而，遗憾的是，一个月后，她的文件系统里什么都没有了。Word 的 “文档历史”工具，或她曾经粘贴在显示屏边缘用于记录修改过程的便签纸，将把所有的变化过程都揉合在一起。<br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/5.jpg" style="width:100%;height:auto;"></div><br>这正是Git 大放光芒之处。如果 Sally 一直结合 Git 使用Word，她就能对所有这些相关的变化做一个关于“将精灵引入到系列”的简洁小结。她可以看到所有穿插在页、章节、文件，以及每本书中的修改记录，让她真正地了解引入精灵对她的奇幻系列产生的影响。这个“简洁的小结”就是我们在 Git 领域中所讲的<b>提交（commit) </b><br><br><b>回顾一下。</b> Git 是一个软件，它允许你通过提交对一个系统（或一组）文件的历史进行注释。这些提交便是在给定时间点对系统做出的差异“快照”。<br><br>那么，如果我是Sally，我的<b>提交历史</b>看起来是这样子的：<br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/6.jpg" style="width:100%;height:auto;"></div><br><h2> Github </h2><br>到目前为止，一切都还不错。但是，<b>如果 Sally 同时用到两台电脑工作，将会发生什么呢？</b>问得好。这时，就该用到 Github了。注意，不要和 Git 混淆了。Github 获取 Git 中的提交历史，并将其存储在互联网上，因此你可以从任一一台电脑访问它。你在本机（例如：你当前正在使用的电脑）<b>推送（pushing）</b>提交到 Github，然后，从另一台新的或不同的电脑上<b>拉取（pulling）</b>这些提交。<br><br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/7.jpg" style="width:100%;height:auto;"></div><br>让我们假设上图为 Sally 的工作流程。她在家里的台式电脑（左边，橘黄色的）上开启她一天的工作。接下来，她完成了几个章节的写作，又做了一些编辑工作，等等。整个过程中，她对工作总共进行了三次策略性的“快照”（Git 提交）。<br><br>下午，Sally 常常喜欢带着她的笔记本电脑（上图中的右侧，蓝色的）去咖啡馆写作。今天也不例外。因此，在关闭家里的台式电脑之前，她需要确认当前的Git 提交历史已<b>推送（push）</b>到了在线Github。一旦被上传到 Github，这些提交记录就被存储在<b>远程仓库（remote repository）</b>中。<br><br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/8.jpg" style="width:100%;height:auto;"></div><br>如上图所示，树的类比完全适用于奇幻作家协会在这个项目上的合作情况，仓库历史沿主分支向上移动。常规工作流始于每个作者为完成一个工作任务（例如编写章节内容，或排版章节）而在主分支上创建分支。只有当更改得到其他合作作家的批准时，分支才会被合并到主分支上（请谨记，主分支上的内容，才是最终要发布的内容）。<br><br>当一个分支的内容<b>合并（merged）</b>到主分支时，意味着该分支的内容会覆盖主分支上的。因此，现有内容的任何更改都将会替代之前的。当然，任何新添加的内容也会添加到主分支。实际上，当分支合并到主分支时，该分支的提交历史被添加到主分支提交历史的顶部。<br><br>然而，你可能正在思考：<b>人们在本机的工作和之后才推送到 Github 的工作变更是如何连接到一起的呢？</b><br>关于这个问题，重点在于：你在 Github 的远程仓库是你本机工作项目的一个镜像。这意味着，你在自己的电脑里存储了该项目（例如：一个已设置可进行 Git 提交的文件夹）的本地 Git 仓库。在这个本地的 Git 仓库（再次，这是一个特定术语，指你的电脑里某个启用了 Git 功能的文件夹）中，你拥有与该项目相关的所有文件，在本文的例子中，即《奇幻系列生物辞典》。<br><br>它的工作原理很像 Dropbox ：你在不同的设备（你的家庭电脑、办公室电脑，等等）上创建本地文件夹，进行工作并更新这些文件。最后，这些操作被同步到网络上。然而，我们知道，Git/Github 工作流还包含了一些额外的步骤。首先，你必须有意识地对某一时刻的工作执行“快照”（即执行一次提交）。然后，你必须特意地推送这些提交（push） 到 Github。只有这样，你的工作才被同步到网络上的位置（Github 版本库）。<br><br>既然如此，为什么不自动化该工作流呢？为什么不让它像 Dropbox一样，当你更新本地文件时，同时自动更新 Github 上的文件？有很多理由让我们不这么做。最主要的理由是——bugs 。同出版界一样，软件工程中也不是所有写过的东西都要保留。有时，你希望实验一下你的想法，如果实验失败，你希望有一种简单的方式能让工作快速回滚到之前的正确状态上。这也是为什么我们提倡这个经验法则，即在你试图用不同的方法编辑或实验之前，先对当前你希望保留的修改进行提交。频繁地提交小块工作有益无害，事实上，许多工程师为自己能做到这一点而感到自豪。<br><br>现在，回到《奇幻系列生物辞典》。由于  Sally 对兽族有较深的了解，她被挑选为写兽族章节。但她不想在没有经过其它合作人员允许的情况下去修改这本书，于是，她创建了一个本地分支，并在该分支上进行写作和提交。然后，<b>她将本地分支推送到 Github。</b>像往常一样，Github 的远程仓库是本地库的一个镜像，最新进展显示 Sally 已创建了一个包含部分提交的分支（如下图所示）。<br><br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/9.jpg" style="width:100%;height:auto;"></div><br>随着她对本章节的持续写作，Sally 进行了更多的提交，并将它们推送到 Github 的在线镜像分支。终于，她准备请 Tom 和 Adam 一起对她的工作进行评审。因此，她在 Github 上发布了一个<b> Pull Request（发布请求）</b>，这是一个 Github 功能，允许她解释该分支相对于主分支做了哪些修改。Github 还提供了一个简易平台，合作人员可以在该平台上针对分支的修改内容进行讨论，并要求 Sally 在分支合并到主分支之前对一些有异议的内容进行修改。<br><br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/10.jpg" style="width:100%;height:auto;"></div><br>在对部分内容请求修改后，如上图所示，Tom 和 Adam 对 Sally 的分支内容很满意，并决定将她的工作成果合并到 Github 的主分支上。此时，他们所要做的就是将 Sally 之前独立提交的内容，添加到主分支的提交历史顶部：<br><br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study2/11.jpg" style="width:100%;height:auto;"></div><br>此时，Sally可以切换（或“<b>check out</b>”）到本地计算机上的主分支，并将先前在功能分支（兽人章节分支）中的独立提交拉取下来。现在她又要在新的主分支上重新开始了：以该主分支为基础为她的下一步工作创建一个新的本地分支，帮助汤姆编辑有关妖精的章节。因此，这一过程又将重复:<br><ol><br><li>创建本地分支</li><br><li>在本地分支上编辑修改，然后提交</li><br><li>推送提交（Push）到 Github</li><br><li>创建发布请求（Pull Request），说明该分支包含了哪些更改</li><br><li>合并（Merge）分支内容到主分支</li><br><li>将主分支上的最新提交拉取（pull）到本地</li><br><li>重复上述步骤</li><br></ol><br>正如你所看到的，这是一个非常流畅的工作流，完美地结合了独立工作与团队协作。你本机的 Git 提供了一个绝妙的方法，即通过由你自己控制和策划的丰富的历史提交，来创建你工作的各种版本。Github 是一个非常棒的在线版本控制工具，不仅存储和提供了清晰的可视化历史记录，而且还能进行协同工作和质量控制。<br><br>总而言之，我希望我已经说服你去<b>尝试使用 Git  和 Github 进行任何项目</b>。没有理由只有工程师能从这个很棒的工具中受益。毕竟，我们也想看到更多有关兽人的故事。<br><br><h2>本文涉及的术语</h2><br><ul><br><li><b>Version Control（版本控制）: </b>任何一个能够让你了解文件的历史，以及该文件的发展进程的系统。</li><br><li><b>Git：</b>一个版本控制程序，通过对变更进行注释，以创建一个易于遍历的系统历史。</li><br><li><b>Commit（提交）：</b>在指定时间点对系统差异进行的注释 “快照”</li><br><li><b>Local（本地）：</b>指任意时刻工作时正在使用的电脑。</li><br><li><b>Remote（远程）： </b>指某个联网的位置。</li><br><li><b>Repository (仓库，简称 repo)：</b>配置了Git超级权限的特定文件夹，包含了你的项目或系统相关的所有文件。</li><br><li><b>Github：</b>获取本地提交历史记录，并进行远程存储，以便你可以从任何计算机访问这些记录。</li><br><li><b>Pushing（推送）：</b>取得本地Git提交（以及相关的所有工作），然后将其上传到在线Github。</li><br><li><b>Pulling（拉取）：</b>从在线的Github上获取最新的提交记录，然后合并到本地电脑上。</li><br><li><b>Master (branch)：</b>主分支，提交历史 “树”的 “树干”，包含所有已审核的内容/代码。</li><br><li><b>Feature branch（功能分支/特性分支）：</b>一个基于主分支的独立的位置，在再次并入到主分支之前，你可以在这里安全地写工作中的新任务。</li><br><li><b>Pull Request（发布请求）：</b>一个 Github 工具，允许用户轻松地查看某功能分支的更改 （the difference或 “diff”），同时允许用户在该分支合并到主分支之前对其进行讨论和调整。</li><br><li><b>Merging（合并）：</b>该操作指获取功能分支的提交，加入到主分支提交历史的顶部。</li><br><li><b>Checking out（切换）：</b>该操作指从一个分支切换到另一个分支。</li><br></ul>]]></content>
    
    <summary type="html">
    
      本文旨在使用通俗易懂的文字，讲解版本控制背后的理论，以便你能对程序员们如何工作有个全局概念。本文不涉及代码，不用下载啥东西，循序渐进，不关注繁复细节，只有文字和一些不怎么漂亮的手绘涂鸦。
    
    </summary>
    
      <category term="工具文" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7%E6%96%87/"/>
    
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew环境搭建</title>
    <link href="http://yoursite.com/2018/06/04/study1/"/>
    <id>http://yoursite.com/2018/06/04/study1/</id>
    <published>2018-06-04T02:00:00.000Z</published>
    <updated>2018-06-25T07:16:30.230Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><a id="more"></a><div class="note info"><h2>Homebrew</h2></div><br><a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a>是一款 Mac OS 平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。<br><h3>Homebrew的安装</h3><br>在安装 Homebrew 之前，需要将 Xcode Command Line Tools 安装完成，这样你就可以使用基于 Xcode Command Line Tools 编译的 Homebrew。<br>在 Terminal 中复制以下命令，跟随指引，将完成 Hombrew 安装<br><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code><br><h3>Homebrew的基本使用</h3><br>安装一个包，可以简单的运行：<br><code>$ brew install &lt;package_name&gt;</code><br>更新 Homebrew 在服务器端上的包目录<br><code>$ brew install &lt;package_name&gt;</code><br>查看你的包是否需要更新：<br><code>$ brew outdated</code><br>更新包：<br><code>$ brew upgrade &lt;package_name&gt;</code><br>Homebrew 将会把老版本的包缓存下来，以便当你想回滚至旧版本时使用。但这是比较少使用的情况，当你想清理旧版本的包缓存时，可以运行<br><code>$ brew cleanup</code><br>查看你安装过的包列表（包括版本号）<br><code>$ brew list --versions</code><br><h3>Homebrew的卸载</h3><br><figure class="highlight plain"><figcaption><span>Unistall Homebrew</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd `brew --prefix`</span><br><span class="line">rm -rf Cellar</span><br><span class="line">brew prune</span><br><span class="line">rm `git ls-files`</span><br><span class="line">rm -r Library/Homebrew Library/Aliases Library/Formula Library/Contributions</span><br><span class="line">rm -rf .git</span><br><span class="line">rm -rf ~/Library/Caches/Homebrew</span><br></pre></td></tr></table></figure><br><br><hr><div class="note info"><h2>Node.js</h2></div><br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>是一个 Javascript 运行环境，作为前端开发者，Node 和 npm 的安装必不可少。<br><h3>Node.js的安装</h3><br>在 Terminal 中复制以下命令，跟随指引，将完成 Node.js 的安装，npm 是随同一起安装的包管理工具,无需额外安装命令。<br><code>brew install node</code><br><h3>检查是否安装成功</h3><br>在 Terminal 中复制以下命令，查看已安装版本<br><code>node -v</code><br><code>npm -v</code><hr><br><div class="note info"><h2>React</h2></div><br><a href="https://reactjs.org/" target="_blank" rel="noopener"> React </a>是 Facebook 开发的一款JS库，因为该公司对市场上所有 JavaScript MVC 框架，都不满意，就决定自己写一套，用来架设 Instagram 的网站。做出来以后，发现这套东西很好用，就在2013年5月开源了。<br><h3>Watchman</h3><br>React  通过 Watchman 来监视代码文件的改动并适时进行编译，就像 Xcode 在每次文件被保存时对文件进行编译。<br><br>在 Terminal 中复制以下命令，跟随指引，将完成 Watchman 的安装<br><code>brew install watchman</code><br><h3>React的安装</h3><br>在 Terminal 中复制以下命令，跟随指引，将完成 React 的安装<br><code>npm install -g create-react-app</code><hr><br><div class="note info"><h2>Ant Design</h2></div><br><a href="https://ant.design/" target="_blank" rel="noopener"> Ant Design </a>是一种设计语言，不单纯只是设计原则、控件规范和视觉尺寸，还配套有前端代码实现方案。也就是说采用 Ant Design 后，UI 设计和前端界面研发可同步完成，效率大大提升。目前有阿里、美团、滴滴、简书采用。<br><h3> Ant Design 的安装</h3><br><code>brew install ant</code><hr><br><div class="note info"><h2>Gradle</h2></div><br><a href="https://gradle.org/" target="_blank" rel="noopener"> Gradle </a>是一个基于 JVM 的构建工具，支持 Maven ，Ivy 仓库，支持传递性依赖管理，而不需要远程仓库或者是 pom.xml 配置文件，基于Groovy，build脚本使用Groovy编写<br><h3> Gradle 的安装</h3><br>在 Terminal 中复制以下命令，跟随指引，将完成 Gradle 的安装<br><code>brew install gradle</code><br><h3> Gradle 的特性</h3><br>Gradle 提供了一些默认的 Tasks 给 Java 项目，比如，编译源代码、运行测试、打包 JAR .每一个 Java 项目都有一个标准的路径布局，这个布局定义了去哪里找项目的源代码、资源文件和测试代码，你也可以在配置中修改这些默认位置。<br><br>Gradle 的约定类似于 Maven 的约定优于配置的实现，Maven 的约定就是一个项目只包含一个 Java 源代码路径，只产生一个 JAR 文件，对于企业级开发来讲这样是显然不够的，Gradle 允许你打破传统的观念，Gradle 的构建生命周期如下图：<br><br><div style="width:800px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study1/1.png" style="width:100%;height:auto;"></div><hr><br><div class="note info"><h2>Spring Boot</h2></div><br><a href="http://spring.io/projects/spring-boot" target="_blank" rel="noopener"> Spring Boot </a>是全新框架，是一些库的集合,它能够被任意项目的构建系统所使用,其设计目的是用来简化新Spring应用的初始搭建以及开发过程。<br><h3>Spring Boot的安装</h3><br>在 Terminal 中复制以下命令，跟随指引，将完成 Spring Boot 的安装<br><code>brew install springboot</code><br><h3>Spring Boot的特性</h3><br><ul><br><li>使用 Spring 项目引导页面可以在几秒构建一个项目</li><br><li>方便对外输出各种形式的服务，如 REST API、WebSocket、Web、Streaming、Tasks非常简洁的安全策略集成支持关系数据库和非关系数据库支持运行期内嵌容器，如 Tomcat 、Jetty 强大的开发包，支持热启动自动管理依赖自带应用监控支持各种 IED ，如 IntelliJ IDEA 、NetBeans</li><br><li>非常简洁的安全策略集成</li><br><li>支持关系数据库和非关系数据库</li><br><li>支持运行期内嵌容器，如 Tomcat、Jetty</li><br><li>强大的开发包，支持热启动</li><br><li>自动管理依赖</li><br><li>自带应用监控</li><br><li><br>支持各种 IED，如 IntelliJ IDEA 、NetBeans/li&gt;<br></li></ul><hr><br><div class="note info"><h2>H2 Database</h2></div><br><a href="http://www.h2database.com/html/main.html" target="_blank" rel="noopener"> H2 数据库</a>是一个开源的、纯java实现的关系数据库<br><h3> H2 数据库的安装</h3><br>在 Terminal 中复制以下命令，跟随指引，将完成 H2 数据库的安装<br><code>brew install h2</code><br><h3> H2 数据库的特点</h3><br><ul><br><li>性能，小巧</li><br><li>同时支持网络版和嵌入式版本，另外还提供了内存版</li><br><li>有比较好的兼容性，支持相当标准的sql标准</li><br><li>提供了非常友好的基于web的数据库管理界面</li><br></ul><br><div style="width:600px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/study1/2.png" style="width:100%;height:auto;"></div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;本文将介绍如何以Homebrew为核心搭建编程环境,不断更新&lt;/center&gt;&lt;center&gt;目前涉及：Node.js , React , AntD , Gradle , Spring Boot , H2 DB &lt;/center&gt;
    
    </summary>
    
      <category term="工具文" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7%E6%96%87/"/>
    
    
      <category term="Homebrew" scheme="http://yoursite.com/tags/Homebrew/"/>
    
  </entry>
  
  <entry>
    <title>GetAway</title>
    <link href="http://yoursite.com/2018/05/10/getaway/"/>
    <id>http://yoursite.com/2018/05/10/getaway/</id>
    <published>2018-05-10T02:00:00.000Z</published>
    <updated>2018-06-26T01:42:14.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"></p><p></p><h2 class="blockquote-center">2018.5.10 Portland.ME</h2><br><img src="/pics/getaway/logo.jpg" alt="logo"><br><a id="more"></a><p></p>  <div class="w3-row w3-padding-64" id="about"><br>    <div class="w3-col m6 w3-padding-large w3-hide-small"><br>     <img src="/pics/getaway/1.jpg" class="w3-round w3-image" alt="pic1" width="600" height="600"><br>    </div><div class="w3-col m6 w3-padding-large"><br>      <h2 class="w3-center">逃离波士顿</h2><br>      <p class="w3-large"><a href="https://getaway.house/" target="_blank" rel="noopener">Getaway</a>是 Cindy 偶然在 Instgram 上刷到的，正如官方宣传的一样，手工制作的小屋成为了让我们远离尘嚣的仙境。不奢求水帘洞一样的叹为观止，<span class="w3-tag w3-light-grey">原木与落地窗</span>的搭配让我们瞬间就爱上了这里。</p><br>      <hr><br>      <p class="w3-large"> Cabin 是拖拽式房车的设计，从它的四个轮子就能看出来。所有的供给（水+电）都又连接置车身的线缆所提供，仿佛把这里打造成了一个抵抗『后天』的避难所。</p><br>    </div><br>  </div>  <div class="w3-row w3-padding-64"><br>    <div class="w3-col l6 w3-padding-large" id="menu"><br>      <h2 class="w3-center">像原始人一样生火</h2><br>      <p class="w3-large">官方提供了 starter 和充足的木头，看过详细的说明书，很快就能升起一座篝火。Cindy 和我从 Boston 带来了牛肉，鸡翅和红薯，自给自足的感觉让我们难以忘怀。</p><br>      <hr><br>      <p class="w3-large">在森林里吃饭有一种奇妙的感觉，你会抱着某种期待，盼着会有松鼠和鹿来跟你讨要食物。但是我很快就阻止了自己的幻想，Massachusetts 的熊可不是什么可爱的小动物。</p><br>    </div><div class="w3-col l6 w3-padding-large"><br>      <img src="/pics/getaway/2.jpg" class="w3-round w3-image" alt="pic2" width="600" height="600"><br>    </div><br>  </div>  <div class="w3-row w3-padding-64"><br>    <div class="w3-col m6 w3-padding-large w3-hide-small"><br>         <img src="/pics/getaway/3.jpg" class="w3-round w3-image" alt="pic1" width="600" height="600"><br>        </div><div class="w3-col m6 w3-padding-large"><br>      <h2 class="w3-center">波特兰的灯塔不孤独</h2><br>      <p class="w3-large"><a href="http://www.southportland.org/departments/parks-recreation-aquaticspool/parks-department/parks-trails-beaches/bug-light-park/" target="_blank" rel="noopener"> Bug Light </a>就像图中的一样伫立在 Portland 的海边，在这里可以欣赏到缅因州最大港口的天际线。</p><br>      <hr><br>      <p class="w3-large">虽然 Bug Light Park 很小，但是来往渔船的络绎不绝让我们感受到了波特兰的海产盛况，于是我们决定去体验一下当地食物。</p><br>    </div><br>  </div>  <div class="w3-row w3-padding-64"><br>      <div class="w3-col l6 w3-padding-large" id="menu"><br>        <h2 class="w3-center">龙虾还是蛤蜊汤？</h2><br>        <p class="w3-large">和 Boston 一样，作为美国东北部的港口城市，波特兰最不可或缺的就是龙虾了。龙虾的烹饪方式有很多种，从清蒸到椒盐，从蒜蓉到龙虾汤，甚至是芝士焗松茸，令人眼花缭乱。我和 Cindy 最后还是选择了清蒸，一种最健康，最追寻食物本身味道的方式。</p><br>        <hr><br>        <p class="w3-large">蛤蜊浓汤是我们每次吃海鲜的必备清单之一，作为新英格兰地区的特色菜肴，是一种以蛤蜊为主要材料，奶油为汤底，配以马铃薯及洋葱等配料的海鲜浓汤。<span class="w3-tag w3-light-grey">每次给的小饼干我都吃不完。</span></p><br>      </div><div class="w3-col l6 w3-padding-large"><br>        <img src="/pics/getaway/4.jpg" class="w3-round w3-image" alt="pic4" width="600" height="600"><br>      </div><br>  </div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;在Cindy本科期间的最后一门final结束后，我们决定去缅因州自驾游3天&lt;/center&gt;
    
    </summary>
    
      <category term="旅游文" scheme="http://yoursite.com/categories/%E6%97%85%E6%B8%B8%E6%96%87/"/>
    
    
      <category term="Maine" scheme="http://yoursite.com/tags/Maine/"/>
    
  </entry>
  
  <entry>
    <title>分享一些 Github 有趣的项目（不断更新）</title>
    <link href="http://yoursite.com/2018/04/10/gitshare/"/>
    <id>http://yoursite.com/2018/04/10/gitshare/</id>
    <published>2018-04-10T02:00:00.000Z</published>
    <updated>2018-07-06T03:44:47.661Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><a id="more"></a><p><center><h2><span id="inline-toc">1.</span> Javascript </h2></center></p><h3><a href="https://ant.design/" target="_blank" rel="noopener">Ant Design</a></h3><br>阿里开源的一套企业级的 UI 设计语言和 React 实现。<a href="https://ant.design/docs/react/introduce-cn" target="_blank" rel="noopener">中文文档</a>，样式偏向于后端，展示效果十分漂亮。<br><h3><a href="https://motion.ant.design/" target="_blank" rel="noopener">Ant Motion</a></h3><br>阿里开源的项目，一套 React 框架动效解决方案，可以帮助开发者，更容易的在项目中使用动效。同时可以方便快捷地制作一个公司的介绍页。<br><h3><a href="https://github.com/os-js/OS.js" target="_blank" rel="noopener"> OS.js </a></h3><br>JavaScript 写的基于浏览器上的桌面操作系统。使用展示如图：<br><div style="width:600px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/gitshare/1.png" style="width:100%;height:auto;"></div><br><center><a class="btn" href="https://demo.os-js.org/" target="_blank" rel="noopener">在线演示</a></center><br><h3><a href="https://github.com/ksky521/nodePPT" target="_blank" rel="noopener"> Node PPT </a></h3><br>这可能是迄今为止最好的网页版演示库。👉<a class="btn" href="http://js8.in/nodeppt/" target="_blank" rel="noopener">在线演示</a><br><h3><a href="https://github.com/Tencent/WeFlow" target="_blank" rel="noopener"> WeFlow </a></h3><br>微信出品的一个高效、强大、跨平台的 Web 前端开发工作流工具。<br><div style="width:500px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/gitshare/2.jpeg" style="width:100%;height:auto;"></div><br><center><a class="btn" href="https://weflow.io/" target="_blank" rel="noopener">在线演示</a></center><br><h3><a href="https://github.com/chvin/react-tetris" target="_blank" rel="noopener"> React teris</a></h3><br>非常逼真的网页俄罗斯方块游戏<br><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/gitshare/3.gif" style="width:100%;height:auto;"></div><br><center><a class="btn" href="https://chvin.github.io/react-tetris/?lan=zh" target="_blank" rel="noopener">在线试玩</a></center><br><h3><a href="https://github.com/kenwheeler/slick" target="_blank" rel="noopener"> Slick </a></h3><br>实现了几乎所有效果的轮播图插件<br><center><a class="btn" href="http://kenwheeler.github.io/slick/" target="_blank" rel="noopener">在线演示</a></center><br><h3><a href="https://github.com/t4t5/sweetalert" target="_blank" rel="noopener"></a></h3><br><h3><a href=""> Sweetalrt </a></h3><br>纯 JS 写成的 alert 组件，很多公司都在使用的项目。源代码使用了 ES6 进行了重构，使得项目结构更加清晰。可以通过学习其项目结构可以更好的了解 JS 组件的文件结构，分析其源码可以学习如何使用原生 JS 操作 DOM 的高级技巧。<br><div style="width:500px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/gitshare/5.gif" style="width:100%;height:auto;"></div><br><h3><a href="https://github.com/flatpickr/flatpickr" target="_blank" rel="noopener"> Flatpickr </a></h3><br>扁平化的日期选择组件，项目源码使用 TypeScript 编写，可以学习使用 Typescript 编写 JS 插件，Typescript 语言的好处是：可以在多人协作中避免一些变量类型错误的问题，从而提高效率。使用示例代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// ConnonJS 方式引入</span><br><span class="line">const flatpickr = require(&quot;flatpickr&quot;);</span><br><span class="line">flatpickr(&quot;#myID&quot;, &#123;&#125;);</span><br><span class="line">flatpickr(&quot;.myClass&quot;, &#123;&#125;); </span><br><span class="line">// jQuery 方式引入</span><br><span class="line">$(&quot;.selector&quot;).flatpickr(optional_config);</span><br></pre></td></tr></table></figure><br><br><div style="width:400px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/gitshare/6.png" style="width:100%;height:auto;"></div><br><h3><a href="https://github.com/mc-zone/IDValidator" target="_blank" rel="noopener"> IDValidator </a></h3><br>中国大陆个人身份证号验证，支持 15、18 位身份证号，API 如下：<br><ul><br><li><code>isValid</code> 验证号码是否合法，合法返回 True，不合法返回 False</li><br><li><code>getInfo</code> 号码合法时返回分析信息（地区、出生日期、性别、校验位），不合法返回 False</li><br><li><code>makeID</code> 伪造一个符合校验的 ID</li></ul><br><h3><a href="https://github.com/xxhomey19/nba-go" target="_blank" rel="noopener"> NBA go </a></h3><br>可以用命令终端查看 NBA 比赛，包括比赛开始时间表、实时比分情况、文字直播（英文）等。终端看 NBA，你才是最潮的。<br>安装命令 <code>npm install -g nba-go</code><br> <div style="width:500px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/gitshare/7.png" style="width:100%;height:auto;"></div><br><h3><a href="https://github.com/gitpoint/git-point" target="_blank" rel="noopener"> Git-point </a></h3><br>基于 React Native 开发的非官方开源 GitHub 客户端，功能丰富包含查看项目和用户信息、接收通知、管理 Issues 和 PR。支持 Android、iOS<br><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/gitshare/8.png" style="width:100%;height:auto;"></div><br><center><a class="btn" href="https://github.com/gitpoint/git-point/releases" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>点击下载</a></center><br><h3><a href="https://github.com/googlecreativelab/chrome-music-lab" target="_blank" rel="noopener"> Chrome Music Lab </a></h3><br>Chrome 音乐实验室是一个网站，让学习音乐变得更加简单、好玩。完全基于Web端，国内可直接访问、老少皆宜、支持多种乐器，圆你一个音乐梦。<br><div style="width:600px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/gitshare/9.jpg" style="width:100%;height:auto;"></div><br><h3><a href="https://github.com/dawnlabs/carbon" target="_blank" rel="noopener"> Carbon </a></h3><br>以美观、整洁的方式，展示你的代码片段。同时提供 SVG、PNG 多种方式展示。<br><div style="width:600px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/gitshare/10.png" style="width:100%;height:auto;"></div><br><h3><a href=""></a></h3><br><h3><a href=""></a></h3><br><h3><a href=""></a></h3>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;各种语言的开源项目、让生活变得更美好的工具、书籍、学习笔记、教程等。通过这些项目你将学习到更多编程知识、提高自己的编程技巧、发现编程的乐趣。对于老司机我想说：还记得你上次开心地写代码是什么时候吗？&lt;/center&gt;
    
    </summary>
    
      <category term="工具文" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7%E6%96%87/"/>
    
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>In the US-Canada Border</title>
    <link href="http://yoursite.com/2018/03/08/niagarafall/"/>
    <id>http://yoursite.com/2018/03/08/niagarafall/</id>
    <published>2018-03-08T02:00:00.000Z</published>
    <updated>2018-06-27T03:38:59.108Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"></p><p></p><h2 class="blockquote-center">2018.1.3 Buffalo.NY</h2><br><img src="/pics/niagarafall/logo.jpg" alt="logo"><br><a id="more"></a><p></p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;一路向北 终点是尼亚加拉大瀑布&lt;/center&gt;
    
    </summary>
    
      <category term="旅游文" scheme="http://yoursite.com/categories/%E6%97%85%E6%B8%B8%E6%96%87/"/>
    
    
      <category term="New York" scheme="http://yoursite.com/tags/New-York/"/>
    
      <category term="Ohio" scheme="http://yoursite.com/tags/Ohio/"/>
    
      <category term="Pennsylvania" scheme="http://yoursite.com/tags/Pennsylvania/"/>
    
  </entry>
  
  <entry>
    <title>On the Cruise</title>
    <link href="http://yoursite.com/2018/01/03/cruise/"/>
    <id>http://yoursite.com/2018/01/03/cruise/</id>
    <published>2018-01-03T02:00:00.000Z</published>
    <updated>2018-06-28T11:57:41.004Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><a id="more"></a><p><center><h2><span id="inline-toc">1.</span>走！去巴尔的摩坐船！</h2></center><br>&nbsp;&nbsp;&nbsp;&nbsp;紧张的第一学期之后，迎接我们的除了波士顿的暴雪，还有长达三周的小寒假。其实早在 final 开始之前，我和 Cindy 就决定不浪费这个假期，好好规划一下路线，找个有意义的地方呆上一阵子。<br><br>在综合考虑了天气状况，经济水平还有景点热度之后，最适合我们的选择就是搭上一条开往南方的船，直奔加勒比海，享受一下 Florida 的沙滩和鲜橙。<br>&nbsp;&nbsp;&nbsp;&nbsp;Cindy 选中了一条由<a href="https://www.cruise.com/cruise-deals/royal-caribbean-cruise-deals/index.aspx?skin=001&pin=SE_Google&phone=800-806-6964&gclid=Cj0KCQjwpcLZBRCnARIsAMPBgF1ZudtvLyB52eSbjSxDZGYA_7jZI74VF5csb7vPEDaFAoHun75uY2gaAj7uEALw_wcB" target="_blank" rel="noopener">皇家加勒比</a>提供的航线, 下面是我们的航线图。<br></p><p><center> Baltimore ➡️ Charleston ➡️ Orlando ➡️ Grand Bahama Island ➡️ Nassau </center><br>&nbsp;&nbsp;&nbsp;&nbsp;因为时间关系，我们乘坐的是当天最早的一个航班，<span class="label default">PS:</span>你见过凌晨6点的 Boston 吗？🙃在这里吐槽一下 Spirit 雪碧航空，飞机小就算了，托运还要额外收费… Cindy 自从上了飞机就一睡不起了，这是她一直以来的习惯，我一直无法理解如此硌屁股的椅子她是怎么做到睡觉流口水的？🤔</p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/2.jpeg" style="width:100%;height:auto"></div><br>&nbsp;&nbsp;&nbsp;&nbsp;抵达 Baltimore 之后，我们没有在机场久留，直接坐机场快轨前往市中心了。 North Carolina 给我的第一印象除了寒冷之外，就是黑人很多，比例明显高于 Boston。因为船只有下午12点后才能 Check in , 于是我们找了个 Subway 解决午饭问题。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;港口和市中心距离不是很远，当我们的车驶过一大片停车场之后，就能远远的望见这艘伫立在岸边的巨轮 –<a href="https://www.royalcaribbean.com/cruise-ships/grandeur-of-the-seas?ecid=ps_43700008545519143&wuc=USA&gclid=Cj0KCQjwpcLZBRCnARIsAMPBgF0Xj1Q-VZz9i0kXyEx-VrfgKrLlSSPVe89OrSxXqi7sNacseavTx78aAl_jEALw_wcB&gclsrc=aw.ds" target="_blank" rel="noopener"> Grandeur of the Seas. </a>整个 Check in 的流程和机场一样，正规而又迅速，工作人员会根据你的护照 ID 来查询并核实订单信息。在上船之前，你会收到关于 deck plan 地图和船上活动的时间表，服务非常的贴心周到。</p><p><div style="width:600px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/1.jpg" style="width:100%;height:auto;"></div></p><p><center><h2><span id="inline-toc">2.</span>第一天是 Cruising </h2></center><br>&nbsp;&nbsp;&nbsp;&nbsp;我们的船舱在 Deck 4 的船首，属于甲板下带舷窗的小房间，房间装饰虽陈旧但却能看出用心装点过的样子。此外不得不感叹皇家加勒比提供的出色服务，每个船舱都配备有专业管家，从送早餐到打扫房间，他对于我们提出的所有的需求一直都是有求必应。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;管家还给我们留下了指南手册和逃生地图，根据传单上的内容：第一天的活动是 Crusing , 尽情的享受海洋的乐趣吧！ 在晚餐之前，船上工作人员在最大的演出厅召集了所有的乘客，为我们举办欢迎仪式和逃生演习，我们 Deck 4 属于 group 10，配备有专用的救生船，固定在母船的左侧。<br><br>&nbsp;&nbsp;&nbsp;&nbsp; Grandeur of the Seas 是一艘20多岁的老船，从 center 的装修是可以很明显的看出来这一点，但是这并不影响她的豪华，第一次见到6排穿越了11层的高速电梯时，我还是被震惊到了。 Center 是一个活跃的地方，乘客服务中心设立在这，而且几乎所有你要去的船上设施都要经过这里。正因为 Center 视角开阔，有平整的大理石地面，我们还可以经常可以看到互动演出或者跳广场舞的美国大妈们。<br></p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/4.jpg" style="width:100%;height:auto"></div><br>&nbsp;&nbsp;&nbsp;&nbsp;The Great Gatsby是主餐厅之一，船上共3000名乘客，为了保障服务质量，晚餐被分成了两个用餐时段，我们选择的是5点30开始的。The Great Gatsby 的餐费是包括在了船票内的，算是所谓的团餐，但是质量上乘，服务生能记住你的名字和用餐习惯，甚至比波士顿餐厅周的某些$$$餐厅服务还要周到。<br><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/pics/cruise/3.1.png" alt=""></div><div class="group-picture-column" style="width: 50%;"><img src="/pics/cruise/3.2.png" alt=""></div></div><div class="group-picture-row"></div></div></div><br>&nbsp;&nbsp;&nbsp;&nbsp;我用图片墙的方式记录下了主餐厅的晚餐，刚一开始感觉种类丰富，但吃了几天临近下船的时候，才发现选择其实也就只有5，6种，只是不断的更改主食+ Sides +甜点的搭配。<br><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/pics/cruise/5.1.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/pics/cruise/5.2.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/pics/cruise/5.3.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/pics/cruise/5.4.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/pics/cruise/5.5.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="/pics/cruise/5.6.jpg" alt=""></div></div><div class="group-picture-row"></div></div></div></p><p><center><h2><span id="inline-toc">3.</span>8万人口的南卡首府</h2></center><br>&nbsp;&nbsp;&nbsp;&nbsp;一宿的颠簸后我们终于在第二天上午抵达 <a href="https://en.wikipedia.org/wiki/Charleston,_South_Carolina" target="_blank" rel="noopener"> <span class="label primary">Charleston</span> </a>, 一个仅拥有8万人口的<span class="label info">州首府</span>。 Cindy 和我昨晚都睡得很糟糕，这一点并不是因为我们俩的『认床』习惯，而是由于我们的舱位在船首，比较颠簸，尤其是在夜间航行，在床上躺着的时候总会有一种被抛来抛去的感觉。😅<br><br>&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://en.wikipedia.org/wiki/Charleston,_South_Carolina" target="_blank" rel="noopener"> <span class="label primary">Charleston</span> </a> 是南卡的一个沿海小镇，作为南卡罗来纳州的主要港口之一，除了有着排名世界前50的货物吞吐量，每年还会迎接大量的外地游客，当然旅游热季是夏天，我们在冬天抵达的时候，镇上几乎空无一人。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="label success">在这个充满西班牙与墨西哥风情的小镇，到处流淌着从各类酒吧、咖啡馆里飘荡出的南欧或拉美的情歌。</span>街道布局简洁明快，十分干净。路旁建筑物高度不超过三层，造型多姿多彩，尤其面向大海的度假屋更是风情万种，色彩斑斓但又显得统一而多样。这里是同性恋者的乐园，许多美国的商店小屋前挂着象征同性恋之家的六色彩旗和各式各样的彩色飘带，游人可以自由出入其中，感知同性恋者的生活片段。这里又是好莱坞制作影片的天然摄影棚，几乎每天都可见到美国影视界俊男靓女们的迷人身影。令人向往的海洋水族馆每天定时开放。棕榈树下蔚蓝色的小屋虽然因主人的离去显得有点忧伤，但它把那阳光下的蔚蓝溶进了大海，在大海波涛的吟咏中勃发出新的生机。<br></p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/6.jpg" style="width:100%;height:auto"></div><br>&nbsp;&nbsp;&nbsp;&nbsp; <a href="https://en.wikipedia.org/wiki/Charleston,_South_Carolina" target="_blank" rel="noopener"> <span class="label primary">Charleston</span> </a> 是一个活泼的城市，每年在这里都会举办大量的文化节和演出活动。但是在万物萧瑟的隆冬之时，剩下的只有海滨公园的菠萝喷泉。菠萝喷泉虽小但是却造型奇特，一看就是出自怪才之手，它代表着 Charleston 的热情好客，曾多次入选<span class="label danger">全美最美的10大喷泉。</span><br></p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/7.jpg" style="width:100%;height:auto"></div></p><p><center><h2><span id="inline-toc">4.</span>橘子州，世界最大的迪士尼</h2></center><br>&nbsp;&nbsp;&nbsp;&nbsp;知道船要停靠<a href="http://www.cityoforlando.net/" target="_blank" rel="noopener"> Orlando </a>后 ，Cindy 和我开始兴奋地商量登陆后的旅游行程。我提议去环球影城，因为我还从来没去过那里，而且特别想去看霍格沃兹； Cindy持反对意见，她更倾向于 <span class="label info">Disney World</span>, 因为她想和我一起逛游乐场。在争执了一阵之后，我们一致决定去 Disney 并且理由充分，因为我爱她🐽。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;刚下船，我就开始后悔了，这分明是热带啊！微微潮湿的海风中，夹杂着一丝难得春意，最适短衣短裤直接上阵。据说全年都有阳光明媚的温和天气，正如其“阳光之州”的绰号所言，佛罗里达州中部保持着令人舒适的22.2摄氏度的年均气温。道路两旁种着笔直的一排椰子树，因为机场在海边，不远处还能眺望得到金色的沙滩，当日天空是一片晴朗，这里简直是完美的避寒度假胜地！<br></p><p><div style="width:500px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/8.jpg" style="width:100%;height:auto"></div><br>&nbsp;&nbsp;&nbsp;&nbsp;皇家加勒比贴心的安排了从码头直达 <span class="label info">Disney World</span> 的 shuttle bus ，我们在中午12点准时进园。因为 Cindy 提前在车上下载了<a href="https://itunes.apple.com/app/id547436543" target="_blank" rel="noopener"> My Disney Experience </a>， 一个可以查询到游园的电子地图，超市位置和各场馆排队情况的 app . 一进园之后，我们直奔太空山，记得 Space Mountain 在东京迪士尼算是七大项目之一。</p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/9.jpg" style="width:100%;height:auto"><center>我们在城堡前的合影</center></div><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class="label danger"><a href="https://disneyworld.disney.go.com/" target="_blank" rel="noopener">佛州的迪士尼</a>因为是世界最大的迪士尼，是香港迪士尼的90倍大，堪称一座小型城市，所以又称迪士尼世界。</span>我们这天只去了其中的迪士尼公园，也就是最普通的游乐场，但是如果再给我一次机会，我肯定会选择在这里住个两三天，把台风湖和动物世界都看个遍。<br></p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/10.jpg" style="width:100%;height:auto"><center>两袖清风的 Jeff 和 Cindy 的午饭</center></div><br>&nbsp;&nbsp;&nbsp;&nbsp;在迪士尼的一天呆的意犹未尽，时间过的总是那么快，想起了小学毕业的那次旅行，看完迪士尼的烟花后的留恋不舍，想要一辈子都住在这里，把这里的一切都带回家去。船会在晚上9点启航，为了保证不会误船，我们必须在下午5点准时离开，所以我们在看完了花车表演后就坐着大巴回去了。</p><p><center> <a class="btn" href="https://youtu.be/SLXPzejRODA" target="_blank" rel="noopener"><i class="fa fa-youtube fa-fw"></i>Youtube</a><span class="label default">这是当时录制的花车视频</span></center></p><p><center><h2><span id="inline-toc">5.</span>自由港，大巴哈马岛</h2></center><br>&nbsp;&nbsp;&nbsp;&nbsp;我们在岛西的<a href="https://en.wikipedia.org/wiki/Freeport,_Bahamas" target="_blank" rel="noopener"> Freeport </a>停靠一天，因为天气状况良好，我和 Cindy 下船游览一下当地风光，顺便为第二天的潜水活动做一下采购，（我们计划次日在巴哈马首都拿骚浮潜）。这天太阳光照射很强，在这无烈日的寒冬里，让我心中第一次升起了对紫外线的胆怯。 Cindy 从当地人那里买了个草帽，我也戴着红袜队的经典棒球帽来遮阳。港口外是一片热闹的小型集市，充实着各种卖廉价手工艺品的个体户，基本所有的 local 都是黑人。我们买个了当地的新鲜椰子吃，摊主在我们喝完椰子汁后很热情的帮我们把椰肉抠了出来放在小碗里食用。<span class="label success">PS: 不过感觉还没椰子水好喝🤨</span><br></p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/11.jpg" style="width:100%;height:auto"></div><br>&nbsp;&nbsp;&nbsp;&nbsp;在集市外有大巴提供接送服务，其实也就是围着不大的岛屿绕一圈而已，除了繁忙的工商业中心-自由港之外，大巴哈马岛其他的地方就是典型的热带自然风景了。岛上地势低平，气候温和，松树遍地，风景秀丽，是著名的疗养、游览胜地。海滨有洁白平整的沙滩，沙滩上搭着一座座茅草凉棚，供游客们乘凉、歇息。这里远离喧闹的大城市，显得十分恬静、安适，别有一番情趣。<br></p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/12.jpg" style="width:100%;height:auto"></div><br>&nbsp;&nbsp;&nbsp;&nbsp;巴哈马的沙滩和泰国的很像，海水是同样的蓝绿色，在阳光的照射下让人睁不开眼睛；沙子质量也很好，完全是纯白色的，没有任何污染，沙子颗粒非常细腻，摸起来有一种类似于橡皮泥一样柔润的感觉，如果用这种材料做沙雕应该会很有趣吧。在沙滩晒日光浴的基本都是老美，这就很明显能感受到美国人以胖著称的身材了，目光所到之处几乎没有一个匀称健美的。当然这点也许和他们自我的性格有关，彬彬有礼而又不拘小节。因为阳光太晒，我们没有在这里久留便回到船上去了。<br></p><p><center><h2><span id="inline-toc">6.</span>在拿骚差点死掉</h2></center><br>&nbsp;&nbsp;&nbsp;&nbsp;作为巴哈马的首都及其繁荣的经济中心-<a href="https://en.wikipedia.org/wiki/Nassau,_Bahamas" target="_blank" rel="noopener"> Nassau</a>，这里的氛围与大巴哈马岛屿有明显的不同。尽管殖民地时代的魅力在它身上还时有闪现，但古老的拿骚城已经迎来21世纪的第一缕新曙光。拿骚市中心有一条最富有历史感的街道——<span class="label primary">港湾街</span>。英国乔治王时代的浅色建筑和造型奇特的木制办公公寓及店铺, 错落有致的分布在街道两旁。当你悠闲地坐在萨里式游览马车上，一边欣赏沿途而过的风景，一边聆听车夫讲述当地的轶事奇闻，一路上，您会看到数不清的历史遗址，古老的城堡，还有专为女王手工雕刻的楼梯。而庞贝博物馆陈列的艺术品，文献和画卷也在绘声绘色得述说着巴哈马数百年来的历史。<br></p><p><center><a class="btn" href="https://www.youtube.com/watch?v=X86So7uyDOc" target="_blank" rel="noopener"><i class="fa fa-youtube fa-fw"></i>Youtube</a><span class="label default">手机随拍</span></center><br>&nbsp;&nbsp;&nbsp;&nbsp;这里也是购物者的天堂。收藏爱好者将在这里的交易市场发现独一无二的收藏品，这里还可以讨价还价。在拿骚，许多店铺售卖的各类免税名牌商品吸引了众多购物者的目光。漫步在<span class="label primary">巴哈马里维埃拉海滩</span>，华彩闪耀，美丽宜人。这个迷人胜地位于城西3英里处，距金色沙滩只半英里远，乘公共汽车或出租很方便即可到达。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;由于天气过于炎热，Cindy 和我决定下午拜访<span class="label primary">里维埃拉海滩</span>，事实证明，这个决定是个天大的错误。<br></p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/13.jpg" style="width:100%;height:auto"><center> Cindy 抓拍：一个寂寞的背影</center></div><br>&nbsp;&nbsp;&nbsp;&nbsp;当天中午过后，天气由晴朗突然转成多云，就在我们出门后不久，天空开始下起了零星般的小雨，可是这并没有打消我们浮潜的念头。抵达海滩后，才发现这里看起来和想象中的不太一样，此时已经是乌云密布，很多人开始撤离了，但是我们依旧租了一个沙滩椅，把东西收拾好，就去岸边戏水了。可能由于是天气的原因，此时的海水温度比较凉，不太适合游泳，我们只能驻足在沙滩上，默默的玩沙子了。谁也没想到，在我弯腰去洗手的时候，有一股半人高的海浪从侧边向我打来，当我反应过来后，我的眼镜已经被海水卷走了。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;无奈的我们既不能玩浮潜又丢掉了眼镜，最终只能在沙滩上堆起了沙堡，下午3点钟的时候，我们再也忍受不了肆虐的海风，选择了回船避寒。<br></p><p><div style="width:500px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/14.jpg" style="width:100%;height:auto"></div><br>&nbsp;&nbsp;&nbsp;&nbsp;回到船上之后，我们当天就开始上吐下泻，后来我分析应该是在<span class="label primary">里维埃拉海滩</span>患上了胃肠型感冒。船上的医务室给我们打了点滴，开了处方药，并把我们和正常乘客隔离了24小时后才允以放行，真是一段开(难)心(忘)的经历。</p><p><center><h2><span id="inline-toc">7.</span>旅游总结</h2></center><br>&nbsp;&nbsp;&nbsp;&nbsp;这次巴哈马之行充满了各种各样的传奇经历，虽然有这愉快的片段，但是总体来说我还是收获了很多。毕竟9天花了1200刀去了这么多地方已经是非常的划算了。如果再给我一次机会，我同样会选择坐游轮出行，不过下次我会选一艘更大更新的船。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;接近两周的时间里，我和 Cindy 不但没有吵过一次架，而且还因为同样的患病经历给恋爱关系加上了新的标签”病友”，都说只有情侣一同出去旅行，才会发现能不能和的来，如果真是这么说，那么我觉得咱俩应该是分不开了@<span class="label default"><a href="https://www.facebook.com/xianhui.li.9?ref=br_rs" target="_blank" rel="noopener"> Cindy. </a></span></p><p><div style="width:300px;height:auto;text-align:center;float:none;margin-left:auto;margin-right:auto;"><img src="/pics/cruise/15.jpg" style="width:100%;height:auto"></div><br>        <div id="aplayer-uAeeMbXY" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":true,"showlrc":3,"mutex":true,"music":[{"title":"Tonight I Celebrate My Love","author":"Christopher Peacock","url":"http://link.hhtjim.com/163/1196505.mp3","pic":"/pics/poster/tonighticelebrate.jpeg","lrc":"https://歌词.lrc"},{"title":"Always With Me","author":"木村弓 / 奥户巴寿","url":"http://link.hhtjim.com/163/5267808.mp3","pic":"/pics/poster/alwayswithme.jpg","lrc":"https://歌词.lrc"},{"title":"安静的午后","author":"Pianoboy高至豪","url":"http://link.hhtjim.com/163/139730.mp3","pic":"/pics/poster/安静的午后.jpg","lrc":"https://歌词.lrc"}]};  options.element = document.getElementById("aplayer-uAeeMbXY");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script></p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;圣诞结束后，Cindy和我坐船去巴哈马&lt;/center&gt;
    
    </summary>
    
      <category term="旅游文" scheme="http://yoursite.com/categories/%E6%97%85%E6%B8%B8%E6%96%87/"/>
    
    
      <category term="Massachuset" scheme="http://yoursite.com/tags/Massachuset/"/>
    
      <category term="Florida" scheme="http://yoursite.com/tags/Florida/"/>
    
      <category term="Bahama" scheme="http://yoursite.com/tags/Bahama/"/>
    
      <category term="South Carolina" scheme="http://yoursite.com/tags/South-Carolina/"/>
    
      <category term="Orlando" scheme="http://yoursite.com/tags/Orlando/"/>
    
  </entry>
  
  <entry>
    <title>Provincetown</title>
    <link href="http://yoursite.com/2017/11/03/provincetown/"/>
    <id>http://yoursite.com/2017/11/03/provincetown/</id>
    <published>2017-11-03T02:00:00.000Z</published>
    <updated>2018-06-26T02:20:31.399Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"></p><p></p><h2 class="blockquote-center">2017.11.3 Provincetown.MA</h2><br><a id="more"></a><p></p>  <div class="w3-row w3-padding-64" id="about"><br>    <div class="w3-col m6 w3-padding-large w3-hide-small"><br>     <img src="/pics/provincetown/1.jpg" class="w3-round w3-image" alt="pic1" width="600" height="600"><br>    </div><div class="w3-col m6 w3-padding-large"><br>      <h2 class="w3-center">镰刀 <span class="label default">VS</span> 靴子</h2><br>      <p class="w3-large"><a href="https://www.google.com/maps/place/%E7%A7%91%E5%BE%B7%E8%A7%92/@41.7988246,-70.5882886,10z/data=!3m1!4b1!4m5!3m4!1s0x89fb15440149e94d:0x1f9c0efa001cb20b!8m2!3d41.6687897!4d-70.2962408" target="_blank" rel="noopener"> Cape Cod </a>，又称鳕鱼角，是位于麻省南部的一个半岛，从地图上看就像一把镰刀。Cape Cod 是美国东北部著名的度假胜地，Cindy 一直就想来这看看，这个周末难得两人都有时间，当即决定驱车前往。</p><br>    </div><br>  </div>  <div class="w3-row w3-padding-64"><br>    <div class="w3-col l6 w3-padding-large" id="menu"><br>      <h2 class="w3-center">全部都是彩虹色</h2><br>      <p class="w3-large"> Cape Cod 最有名的城市叫做 Provincetown ，除了慵懒的美式小镇风光，和海滨沙滩以及丰富的海产品以外，它还是美国著名的<span class="label warning">同性恋小镇</span>。街道上是随处可见的彩虹旗帜，随便进入一家小店便是各种同性恋周边产品。</p><br>    </div><div class="w3-col l6 w3-padding-large"><br>      <img src="/pics/provincetown/2.jpg" class="w3-round w3-image" alt="pic2" width="600" height="600"><br>    </div><br>  </div>  <div class="w3-row w3-padding-64" id="about"><br>    <div class="w3-col m6 w3-padding-large w3-hide-small"><br>     <img src="/pics/provincetown/3.jpg" class="w3-round w3-image" alt="pic1" width="600" height="600"><br>    </div><div class="w3-col m6 w3-padding-large"><br>      <h2 class="w3-center">美式海鲜小店</h2><br>      <p class="w3-large">由于是海边小镇，Cape Cod 的水产品是非常丰富的。然而，不像在中国，美国人对于海鲜的做法非常单一，基本上只有<span class="label info">“煮”、“炸”，和做成“roll”几种</span>。我们点了 Lobster Roll，Oyster Roll , 和Fried Oysters ，味道不好不坏，不能说是美食，但是用于饱腹和体验当地文化已是足以。</p><br>      <hr><br>      <p class="w3-large">这家店在 Yelp 上排名第一，每个桌子都坐满了人，隔壁桌的美国大叔大妈们正在喝着啤酒畅谈。</p><br>    </div><br>  </div>  <div class="w3-row w3-padding-64"><br>    <div class="w3-col l6 w3-padding-large" id="menu"><br>      <h2 class="w3-center">走，一起去找灯塔！</h2><br>      <p class="w3-large">灯塔，总是伴随着孤独，神秘，永恒这样的字眼出现，以至于一提起灯塔，总不免有种浪漫的气息。而Cape Cod四面环海，灯塔数量众多，于我们而言是个“寻塔”的好地方。</p><br>      <hr><br>      <p class="w3-large">在拿着 Google map 一番讨论后，我和 Cindy 决定去在 Cape Cod 最角落，也就是地图上镰刀尖位置的灯塔-<a href="https://www.racepointlighthouse.org/" target="_blank" rel="noopener"> Race Point Lighthouse. </a></p><br>    </div><div class="w3-col l6 w3-padding-large"><br>      <img src="/pics/provincetown/4.png" class="w3-round w3-image" alt="pic2" width="600" height="600"><br>    </div><br>  </div>  <div class="w3-row w3-padding-64" id="about"><br>    <div class="w3-col m6 w3-padding-large w3-hide-small"><br>     <img src="/pics/provincetown/5.jpg" class="w3-round w3-image" alt="pic1" width="600" height="600"><br>    </div><div class="w3-col m6 w3-padding-large"><br>      <h2 class="w3-center">两个赤脚大仙</h2><br>      <p class="w3-large">我们跟着导航，开车到了沙滩的入口处。此时距离灯塔还非常远，可却已经没有了车能走的路，放眼望去尽是大海和沙滩。一开始，我们尝试着开车走沙滩，正巧我们开着越野车，还专门有一个 <span class="label warning">Sand</span> 模式。不料，车还未全部进入沙滩，前轮就已经转不动了。无奈之下，我们只好把车停好，脱掉不方便的旅游鞋和靴子，徒步向灯塔的方向走去。</p><br>    </div><br>  </div>  <div class="w3-row w3-padding-64"><br>    <div class="w3-col l6 w3-padding-large" id="menu"><br>      <h2 class="w3-center">意犹未尽</h2><br>      <p class="w3-large">天色渐晚，沙滩上的人并不多，晚风吹来，不免有些寒冷。沙粒也略有些坚硬，导致长时间走路后脚已经疼得快麻木了。不过我和 Cindy 的热情并没有被打消，时而去海里趟趟水，时而在沙滩上一起奔跑。</p><br>      <hr><br>      <p class="w3-large">天不由人，在沙滩上走了快一个小时的时候，我们依旧没有见到灯塔的影子，而天色已经很晚了，沙滩上一个灯都没有。出于安全考虑，我们只好趁着天黑透前，快速原路返回。没看到灯塔是我们这次旅行最大的遗憾，不过也给我们下次再来留下了期待。</p><br>    </div><div class="w3-col l6 w3-padding-large"><br>      <img src="/pics/provincetown/6.jpg" class="w3-round w3-image" alt="pic2" width="600" height="600"><br>    </div><br>  </div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;在日渐寒冷的11月初，我和 Cindy 一路向南，来到了鳕鱼角&lt;/center&gt;
    
    </summary>
    
      <category term="旅游文" scheme="http://yoursite.com/categories/%E6%97%85%E6%B8%B8%E6%96%87/"/>
    
    
      <category term="Massachuset" scheme="http://yoursite.com/tags/Massachuset/"/>
    
      <category term="Cape cod" scheme="http://yoursite.com/tags/Cape-cod/"/>
    
  </entry>
  
  <entry>
    <title>White Mountain</title>
    <link href="http://yoursite.com/2017/10/15/whitemt/"/>
    <id>http://yoursite.com/2017/10/15/whitemt/</id>
    <published>2017-10-15T02:00:00.000Z</published>
    <updated>2018-06-25T03:23:21.880Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"></p><p></p><h2 class="blockquote-center">2018.10.15 White mt.NH</h2><br><img src="/pics/whitemt/logo.jpg" alt="logo"><br><a id="more"></a><p></p>  <div class="w3-row w3-padding-64"><br>    <div class="w3-col m6 w3-padding-large w3-hide-small"><br>     <img src="/pics/whitemt/1.jpg" class="w3-round w3-image" alt="pic1" width="600" height="600"><br>    </div><div class="w3-col m6 w3-padding-large"><br>      <h2 class="w3-center">停车坐爱枫林晚</h2><br>      <p class="w3-large">在好友的怂恿下，我和 Cindy 决定在期中考试前的最后一个周末出发前往 New Hampshire 。</p><br>      <hr><br>      <p class="w3-large">早闻白山森林公园的枫叶出名，尤其是在晚秋期间，是全美最好的赏枫区。白山距离波士顿3个小时车程，在我们刚驶入 New Hampshire 的时候，93号公路两旁已经依稀可见枫叶林的景观了。</p><br>    </div><br>  </div>  <div class="w3-row w3-padding-64"><br>    <div class="w3-col l6 w3-padding-large"><br>      <h2 class="w3-center">林间小路，脚下是树叶地毯</h2><br>      <p class="w3-large">虽然93号公路贯穿白山森林，而小路和公路相距不远，但是高大的树干和尚未掉落的黄色树叶把我们笼罩了起来, 甚是安静。</p><br>      <hr><br>      <p class="w3-large">小路的人不多，依稀会有骑自行车爬坡的老美匆匆路过。走在厚厚的落叶上，旁边是小溪，不时会有松鼠冒出头来瞧着你，让人很是惬意。</p><br>    </div><div class="w3-col l6 w3-padding-large"><br>      <img src="/pics/whitemt/2.jpg" class="w3-round w3-image" alt="pic2" width="600" height="600"><br>    </div><br>  </div>  <div class="w3-row w3-padding-64"><br>     <div class="w3-col m6 w3-padding-large w3-hide-small"><br>      <img src="/pics/whitemt/3.jpg" class="w3-round w3-image" alt="pic1" width="600" height="600"><br>     </div><div class="w3-col m6 w3-padding-large"><br>       <h2 class="w3-center">纵谷小径</h2><br>       <p class="w3-large">-grey”&gt;从93号公路下来就是著名的 Flume Gorge ，纵深800英尺，有令人印象深刻的自然景观，狭长的纵谷小径，以及无数瀑布与奇景，我们在这里和 Bear Cave 留下了合影。</p><br>       <hr><br>       <p class="w3-large">一路走上去是小山顶，抬头看去上面是被枫叶染红的天空。这里虽高确不寒，也并不需要所谓的缆车，依旧可以够饱览白山的全貌。</p><br>     </div><br>  </div>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;且听风吟 且看叶落 且有你陪&lt;/center&gt;
    
    </summary>
    
      <category term="旅游文" scheme="http://yoursite.com/categories/%E6%97%85%E6%B8%B8%E6%96%87/"/>
    
    
      <category term="New Hampshire" scheme="http://yoursite.com/tags/New-Hampshire/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/1995/09/06/helloworld/"/>
    <id>http://yoursite.com/1995/09/06/helloworld/</id>
    <published>1995-09-06T02:00:00.000Z</published>
    <updated>2018-07-02T02:09:41.597Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><center><h2>点首歌给你</h2></center><br>        <div id="aplayer-qNaiyuIR" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":true,"showlrc":3,"mutex":true,"music":[{"title":"全部都是你","author":"Dragon Pig","url":"http://link.hhtjim.com/163/465920905.mp3","pic":"/pics/poster/全部都是你.jpg","lrc":"https://歌词.lrc"},{"title":"再也没有","author":"Ryan.B / AY楊佬叁","url":"http://link.hhtjim.com/163/480580003.mp3","pic":"/pics/poster/再也没有.jpg","lrc":"https://歌词.lrc"},{"title":"骄傲的少年","author":"南征北战","url":"http://link.hhtjim.com/163/408332757.mp3","pic":"/pics/poster/骄傲的少年.jpg","lrc":"https://歌词.lrc"},{"title":"骗自己PT.2","author":"AY杨老三 / Noor-99","url":"http://link.hhtjim.com/163/451169473.mp3","pic":"/pics/poster/骗自己.jpg","lrc":"https://歌词.lrc"},{"title":"不用去猜","author":"Jony J","url":"http://link.hhtjim.com/163/490595927.mp3","pic":"/pics/poster/不用去猜.jpg","lrc":"https://歌词.lrc"}]};  options.element = document.getElementById("aplayer-qNaiyuIR");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script></p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;Jeff&#39;s Code Lab - Something New Here&lt;/center&gt;
    
    </summary>
    
      <category term="个人分享" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Music" scheme="http://yoursite.com/tags/Music/"/>
    
      <category term="Jeff&#39;s recommendation" scheme="http://yoursite.com/tags/Jeff-s-recommendation/"/>
    
  </entry>
  
</feed>
