<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[女生可以对男朋友心机到什么程度？]]></title>
    <url>%2F2018%2F07%2F04%2Fzhihu%2F</url>
    <content type="text"><![CDATA[前两天给我妈讲我跟男朋友是怎么在一起的，讲完后我妈说我根本不是她的女儿，我怎么会这么有心机，都是跟谁学的？… 问题是，我一个相貌平平才华平平啥都平平的女生，想撩到一个很帅的男孩子，不心机一点怎么成功啊！！ 我下文太啰嗦，总结一下其实就是：一开始要让对方觉得亏欠自己；要好好表现自己的优点，没有优点也要创造优点；要给对方一点危机感，没有危机也要创造危机😃 1.头一天晚上跟一个异性朋友吃饭，我说起最近想找个男朋友，让他有帅哥一定要介绍给我。他说：诶我明天就要跟一个帅哥逛街，咱们一起呗？我说好的，那我明天开车接上他（他们都刚到美国还没买车），让他一开始就觉得欠我的：）于是第二天就直接去了帅哥的学校接上了帅哥。 2.其实那天帅哥不知道有妹子存在，就很随意的穿了个大裤衩大t恤就出来了，而且还有点害羞，但我还是一眼就看了出来！嗯！这就是我想要的人！于是立刻决定，今天的所有开销都老子来！他们再拒绝也要老子来！开车我来停车费我来吃饭钱也都我来！让帅哥不好意思这样才有理由以后请回我！事实证明这样做是很正确的，吃饭抢着结账时帅哥差点急了，最后我一句“没事，下次你请我不就好啦～”轻松把他噎回去。 3.虽然他们说是逛街，其实俩人都没什么可买的。我那天正好穿了一件嫩粉粉的飞行员夹克（不是正好，是成心的，因为事先不知道他会喜欢什么风格，这么穿就既甜美又运动），我就拉着他俩去帽子店买棒球帽，戴上之后找了个最好看的角度问帅哥好看不，帅哥结结巴巴地说好看… 4.吃完饭本来就要散了，我不想这么早放帅哥走，急中生智邀请他俩参观我的大学（就在餐厅旁边），于是我们仨就在大晚上夜游了一下波士顿大学和查尔斯河…还专门挑的人少气氛佳的地方。 5.第一次见面以我最后单独送帅哥回家为结束（我的助攻是真的懂事），路上我就开始套话，什么现在有没有女朋友啊，之前为什么分了啊，来了美国还想不想找啊，还顺带着半开玩笑半认真的说了一句“你无聊可以多约我啊，反正我大四了挺闲的。”哦顺便通过这次知道了帅哥家住哪里。 6.第一次见面后帅哥开始时不时跟我发微信，我就跟他抱怨自己马上要考gre了可还什么都不会，考什么都不知道。正好他前不久刚考过这个考试，还为此专门上过课，我就提出来让他考前一晚上指导一下我。于是就有了第二次见面… 7.第二次见面我直接很憔悴地就出现了，为了体现一下我学习有多努力…然后他开始给我讲gre考试是个什么套路，结果发现我完全0基础…我说算了我还是背背鸡精单词吧，于是拿出了我其实提前背过一遍的1000多个单词，假装是第一次背，然后让他考我，结果他发现我正确率100%，当场惊了，疯狂夸我聪明。 8.其实帅哥对我第二天的考试，期望是很低的，因为我是真的0基础，完全没接受过培训…但其实我自己心里很清楚，好歹我在美国上了四年学，就算裸考也不会太差。所以跟他约定，如果考上了320（满分340，320申请一个好的研究生就差不太多了），我就请他吃饭，没考过就请我吃饭，结果我果然考过了320…就再一次请他吃了饭，还专门点的贵的，什么龙虾之类的，美其名曰为我庆祝考的不错，其实还是为了让他觉得欠我的，让他想办法弥补我。 10.考试那天知道要见帅哥，想想前几次见面都比较运动，所以考前特意换上了小短裙，露着大白腿就去考试了，差点没给我冻死。吃完饭帅哥邀请我去看电影，还看的鬼片，全程又冷又怕。本来在我的计划里，帅哥看我这样肯定会来抱抱我或者把衣服给我什么的，没想到那天电影的剧场是豪华座椅，每个人之间都超级远……md真是人算不如天算。 11.后来帅哥总是邀请我一起图书馆自习，可即使我整天跟他打一把伞，手时不时就假装不小心碰一下他的，即使我整天在聪明学霸和撒娇小女人之间来回变换，我们的关系都迟迟没有更进一步。最后我终于受不了了，有一次一个学长邀请我第二天吃饭，我就告诉帅哥了，并且顺便夸大了一下我跟学长的关系，给他一种再不把我拿下我就要被抢走了的感觉…结果中午刚说完，下午他就跟我表白了…不过这么做唯一的缺点就是，他后来非逼着我把学长给删了… 12.之后就是很甜的开始恋爱啦！帅哥虽然很聪明心思也很细腻，但是胆子太小，总怕我们关系进展太快会不好。所以第一次接吻，第一次一起睡觉…都是被我套路来的😃懒得写了打字好累😭 总有人说套路得来的感情不真诚，但还是要看是什么样的人吧。我一个理科生不太会讲话，但反正，现在已经是男朋友的帅哥，跟我好了快一年了，每天都把我宠上天，一次架都没吵过，我刚开始生气他就马上娇滴滴地认错。啧啧啧，活到这么大还从来没像现在这么幸福过。 好像有点跑题…不过算啦算啦反正也没人能看见😋]]></content>
      <categories>
        <category>转载</category>
      </categories>
      <tags>
        <tag>情感</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[这个难熬的夏天]]></title>
    <url>%2F2018%2F07%2F01%2F18summer%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;在经历 Cindy 的本科毕业典礼之后，我们分别回到了各自的老家，开始了漫长难熬的暑假生活。因为 Jeff 面临着明年5月毕业找工作的问题，所以这个暑假的实习经历显得尤为重要，在父母的帮助下，我顺利加入了 Accenture 的 IT 部门，成为了 ISA 项目的暑期实习生；当然 Cindy 的暑假也安排的也很充实有意义，她选择报名网课，趁着时间充足在研究生阶段之前多学习一些有用的工具。&nbsp;&nbsp;&nbsp;&nbsp;18年的暑假虽然和往常一样炎热，但是四年一度的世界杯在百无聊赖的酷热中给 Jeff 的生活带来了一丝希望。当然最能鼓励着他奋斗下去的，除了每天一瓶的 diet coke, 就是6月底由大连开往北京南的火车票了。 还不错的软卧&nbsp;&nbsp;&nbsp;&nbsp;Jeff的默认工作时间是8：30 am - 5:30 pm , 在我刚出办公室准备掏出手机打车的时候，就远远的看到了来接我去大连站的爸妈😄，他们怕我赶不上8点整的火车，特意赶过来送我一程。&nbsp;&nbsp;&nbsp;&nbsp;在家洗了澡，吃了水饺（北方人有上船饺子，下船面的习俗）后就早早的来到候车厅等车了。&nbsp;&nbsp;&nbsp;&nbsp;因为从没坐过软卧，所以我这次想要尝试一下，软卧每个舱室有四张床，上下铺结构，虽然卫生条件依然不是很理想，但是相比硬卧已经优秀太多了。我们房间有一对来大连游玩的夫妇和一位阿姨， Youtube三里屯 - 客从何处来]]></content>
      <categories>
        <category>旅游文</category>
      </categories>
      <tags>
        <tag>Beijing</tag>
        <tag>Dalian</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[I won't let you down]]></title>
    <url>%2F2018%2F06%2F28%2Fiwontletudown%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>个人分享</category>
      </categories>
      <tags>
        <tag>Jeff&#39;s recommendation</tag>
        <tag>Video</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大白话解释 Git 和 GitHub]]></title>
    <url>%2F2018%2F06%2F23%2Fstudy2%2F</url>
    <content type="text"><![CDATA[写本文的动机学习任何东西都能在网络上找到如此之多的指导教程，这一直令我惊讶不已。Git 和 Github 也不例外，网络上有大量优秀资源，这些资源要么只对其中一个，要么兼顾二者引导你开始学习。以下是我特别喜欢的一些资源： Treehouse – 写给设计师的 Git 入门介绍Roger Dudler – Git 简易教程Pluralsight – Github：初学者指南然而，我发现这些教程总是跳过许多理论知识，直接解释如何通过命令行或 Github 桌面应用程序使用 Git 。坦白说，如果你只是想知道你的开发团队谈论的到底是什么，这些指导教程也绰绰有余了。如上所述，我的目标是对版本控制的整体概念进行简明扼要地讲解，同时希望能让你了解到版本控制是如此酷。让我们从最基础的开始：版本控制版本控制（Version control）:学习它，爱上它，享受它。顾名思义，版本控制系统是任何能让你了解到一个文件的历史，以及它的发展过程的系统。之前作为平面设计师时，我常常会遇到这种文件：看起来眼熟？尽管上述系统不是一个好用的系统 ，但它确实是一个版本控制系统。更复杂点的例子就像，Google 文档的 “修订历史”或 Photoshop 的“历史”工具。开始 GitGit 是一种专为处理文本文件而设计的版本控制系统。因为，归根到底，这就是代码的本质：一堆堆以某种方式联合在一起的文本文件。Git 是一个可安装应用，它允许你对你自己所做的更改进行注释，用以创建易于导航的系统历史。（附： “Git” 也是工程师取的名字，我们对市场部同仁感到抱歉）那么， Git 做了什么，是简单地保存文件所做不到的呢？从根本上讲，文件保存就是一个简化的版本控制系统，但坦率地说，它并不是一个好用的系统，因为它只能前进。当然，你也许会争论“撤消”按钮可以让你的文件回滚到以前的状态。但我们都清楚，“撤消”按钮有其局限性，最明显示的是，在关闭文件时，文件的过去也随之丢失。另外，文件保存是非常个人化的。它不能够显示整个系统的历史，只能够显示该文件的。针对这一点，你可能会想，“嗯，我不是一个工程师，我不需要为系统烦恼”。我愿意花些时间来解释一下，很多事情你认为不是“系统”，而实际上它们就是。以 Sally 为例，她是一个正在写下一个大冒险奇幻小说系列的作家。Sally 已经写完该系列小说中的第一本，并把它传给了她的编辑。此外，由于她才华出众，在等待编辑的反馈的同时，她还写了第二本书的前三章。每本书都建立了独立的 Word 文件。在某个快乐的日子，Sally 等来了她的编辑关于第一本书的反馈。他担心年轻的读者不想读一系列专写兽人故事的书，希望她在这个故事中引入一些精灵。关于这点，Sally 叹了口气，但很快意识到，她的精灵新角色将带来始料未及的冲突和曲折的情节。然后，她做了以下事情：在第一本书中加入新角色，并修改故事情节。完成第一本书之后，对第二本书的故事情节，进行必要的修改。所有的这些修改，导致她需要引入某个地理位置到第一本书中，而不是第二本书。重新编辑第一本书，让它包含新的地理位置。终于，她推开了她的键盘，确信已经把精灵融入到了她的奇幻世界之中。你瞧，Sally 实际上在处理一个系统。她的两本书互相影响。角色、地理位置和故事情节在两本书中流动交织。然而，遗憾的是，一个月后，她的文件系统里什么都没有了。Word 的 “文档历史”工具，或她曾经粘贴在显示屏边缘用于记录修改过程的便签纸，将把所有的变化过程都揉合在一起。这正是Git 大放光芒之处。如果 Sally 一直结合 Git 使用Word，她就能对所有这些相关的变化做一个关于“将精灵引入到系列”的简洁小结。她可以看到所有穿插在页、章节、文件，以及每本书中的修改记录，让她真正地了解引入精灵对她的奇幻系列产生的影响。这个“简洁的小结”就是我们在 Git 领域中所讲的提交（commit) 回顾一下。 Git 是一个软件，它允许你通过提交对一个系统（或一组）文件的历史进行注释。这些提交便是在给定时间点对系统做出的差异“快照”。那么，如果我是Sally，我的提交历史看起来是这样子的： Github 到目前为止，一切都还不错。但是，如果 Sally 同时用到两台电脑工作，将会发生什么呢？问得好。这时，就该用到 Github了。注意，不要和 Git 混淆了。Github 获取 Git 中的提交历史，并将其存储在互联网上，因此你可以从任一一台电脑访问它。你在本机（例如：你当前正在使用的电脑）推送（pushing）提交到 Github，然后，从另一台新的或不同的电脑上拉取（pulling）这些提交。让我们假设上图为 Sally 的工作流程。她在家里的台式电脑（左边，橘黄色的）上开启她一天的工作。接下来，她完成了几个章节的写作，又做了一些编辑工作，等等。整个过程中，她对工作总共进行了三次策略性的“快照”（Git 提交）。下午，Sally 常常喜欢带着她的笔记本电脑（上图中的右侧，蓝色的）去咖啡馆写作。今天也不例外。因此，在关闭家里的台式电脑之前，她需要确认当前的Git 提交历史已推送（push）到了在线Github。一旦被上传到 Github，这些提交记录就被存储在远程仓库（remote repository）中。如上图所示，树的类比完全适用于奇幻作家协会在这个项目上的合作情况，仓库历史沿主分支向上移动。常规工作流始于每个作者为完成一个工作任务（例如编写章节内容，或排版章节）而在主分支上创建分支。只有当更改得到其他合作作家的批准时，分支才会被合并到主分支上（请谨记，主分支上的内容，才是最终要发布的内容）。当一个分支的内容合并（merged）到主分支时，意味着该分支的内容会覆盖主分支上的。因此，现有内容的任何更改都将会替代之前的。当然，任何新添加的内容也会添加到主分支。实际上，当分支合并到主分支时，该分支的提交历史被添加到主分支提交历史的顶部。然而，你可能正在思考：人们在本机的工作和之后才推送到 Github 的工作变更是如何连接到一起的呢？关于这个问题，重点在于：你在 Github 的远程仓库是你本机工作项目的一个镜像。这意味着，你在自己的电脑里存储了该项目（例如：一个已设置可进行 Git 提交的文件夹）的本地 Git 仓库。在这个本地的 Git 仓库（再次，这是一个特定术语，指你的电脑里某个启用了 Git 功能的文件夹）中，你拥有与该项目相关的所有文件，在本文的例子中，即《奇幻系列生物辞典》。它的工作原理很像 Dropbox ：你在不同的设备（你的家庭电脑、办公室电脑，等等）上创建本地文件夹，进行工作并更新这些文件。最后，这些操作被同步到网络上。然而，我们知道，Git/Github 工作流还包含了一些额外的步骤。首先，你必须有意识地对某一时刻的工作执行“快照”（即执行一次提交）。然后，你必须特意地推送这些提交（push） 到 Github。只有这样，你的工作才被同步到网络上的位置（Github 版本库）。既然如此，为什么不自动化该工作流呢？为什么不让它像 Dropbox一样，当你更新本地文件时，同时自动更新 Github 上的文件？有很多理由让我们不这么做。最主要的理由是——bugs 。同出版界一样，软件工程中也不是所有写过的东西都要保留。有时，你希望实验一下你的想法，如果实验失败，你希望有一种简单的方式能让工作快速回滚到之前的正确状态上。这也是为什么我们提倡这个经验法则，即在你试图用不同的方法编辑或实验之前，先对当前你希望保留的修改进行提交。频繁地提交小块工作有益无害，事实上，许多工程师为自己能做到这一点而感到自豪。现在，回到《奇幻系列生物辞典》。由于 Sally 对兽族有较深的了解，她被挑选为写兽族章节。但她不想在没有经过其它合作人员允许的情况下去修改这本书，于是，她创建了一个本地分支，并在该分支上进行写作和提交。然后，她将本地分支推送到 Github。像往常一样，Github 的远程仓库是本地库的一个镜像，最新进展显示 Sally 已创建了一个包含部分提交的分支（如下图所示）。随着她对本章节的持续写作，Sally 进行了更多的提交，并将它们推送到 Github 的在线镜像分支。终于，她准备请 Tom 和 Adam 一起对她的工作进行评审。因此，她在 Github 上发布了一个 Pull Request（发布请求），这是一个 Github 功能，允许她解释该分支相对于主分支做了哪些修改。Github 还提供了一个简易平台，合作人员可以在该平台上针对分支的修改内容进行讨论，并要求 Sally 在分支合并到主分支之前对一些有异议的内容进行修改。在对部分内容请求修改后，如上图所示，Tom 和 Adam 对 Sally 的分支内容很满意，并决定将她的工作成果合并到 Github 的主分支上。此时，他们所要做的就是将 Sally 之前独立提交的内容，添加到主分支的提交历史顶部：此时，Sally可以切换（或“check out”）到本地计算机上的主分支，并将先前在功能分支（兽人章节分支）中的独立提交拉取下来。现在她又要在新的主分支上重新开始了：以该主分支为基础为她的下一步工作创建一个新的本地分支，帮助汤姆编辑有关妖精的章节。因此，这一过程又将重复:创建本地分支在本地分支上编辑修改，然后提交推送提交（Push）到 Github创建发布请求（Pull Request），说明该分支包含了哪些更改合并（Merge）分支内容到主分支将主分支上的最新提交拉取（pull）到本地重复上述步骤正如你所看到的，这是一个非常流畅的工作流，完美地结合了独立工作与团队协作。你本机的 Git 提供了一个绝妙的方法，即通过由你自己控制和策划的丰富的历史提交，来创建你工作的各种版本。Github 是一个非常棒的在线版本控制工具，不仅存储和提供了清晰的可视化历史记录，而且还能进行协同工作和质量控制。总而言之，我希望我已经说服你去尝试使用 Git 和 Github 进行任何项目。没有理由只有工程师能从这个很棒的工具中受益。毕竟，我们也想看到更多有关兽人的故事。本文涉及的术语Version Control（版本控制）: 任何一个能够让你了解文件的历史，以及该文件的发展进程的系统。Git：一个版本控制程序，通过对变更进行注释，以创建一个易于遍历的系统历史。Commit（提交）：在指定时间点对系统差异进行的注释 “快照”Local（本地）：指任意时刻工作时正在使用的电脑。Remote（远程）： 指某个联网的位置。Repository (仓库，简称 repo)：配置了Git超级权限的特定文件夹，包含了你的项目或系统相关的所有文件。Github：获取本地提交历史记录，并进行远程存储，以便你可以从任何计算机访问这些记录。Pushing（推送）：取得本地Git提交（以及相关的所有工作），然后将其上传到在线Github。Pulling（拉取）：从在线的Github上获取最新的提交记录，然后合并到本地电脑上。Master (branch)：主分支，提交历史 “树”的 “树干”，包含所有已审核的内容/代码。Feature branch（功能分支/特性分支）：一个基于主分支的独立的位置，在再次并入到主分支之前，你可以在这里安全地写工作中的新任务。Pull Request（发布请求）：一个 Github 工具，允许用户轻松地查看某功能分支的更改 （the difference或 “diff”），同时允许用户在该分支合并到主分支之前对其进行讨论和调整。Merging（合并）：该操作指获取功能分支的提交，加入到主分支提交历史的顶部。Checking out（切换）：该操作指从一个分支切换到另一个分支。]]></content>
      <categories>
        <category>工具文</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Homebrew环境搭建]]></title>
    <url>%2F2018%2F06%2F04%2Fstudy1%2F</url>
    <content type="text"><![CDATA[HomebrewHomebrew是一款 Mac OS 平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。Homebrew的安装在安装 Homebrew 之前，需要将 Xcode Command Line Tools 安装完成，这样你就可以使用基于 Xcode Command Line Tools 编译的 Homebrew。在 Terminal 中复制以下命令，跟随指引，将完成 Hombrew 安装/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;Homebrew的基本使用安装一个包，可以简单的运行：$ brew install &lt;package_name&gt;更新 Homebrew 在服务器端上的包目录$ brew install &lt;package_name&gt;查看你的包是否需要更新：$ brew outdated更新包：$ brew upgrade &lt;package_name&gt;Homebrew 将会把老版本的包缓存下来，以便当你想回滚至旧版本时使用。但这是比较少使用的情况，当你想清理旧版本的包缓存时，可以运行$ brew cleanup查看你安装过的包列表（包括版本号）$ brew list --versionsHomebrew的卸载Unistall Homebrew1234567cd `brew --prefix`rm -rf Cellarbrew prunerm `git ls-files`rm -r Library/Homebrew Library/Aliases Library/Formula Library/Contributionsrm -rf .gitrm -rf ~/Library/Caches/HomebrewNode.jsNode.js是一个 Javascript 运行环境，作为前端开发者，Node 和 npm 的安装必不可少。Node.js的安装在 Terminal 中复制以下命令，跟随指引，将完成 Node.js 的安装，npm 是随同一起安装的包管理工具,无需额外安装命令。brew install node检查是否安装成功在 Terminal 中复制以下命令，查看已安装版本node -vnpm -vReact React 是 Facebook 开发的一款JS库，因为该公司对市场上所有 JavaScript MVC 框架，都不满意，就决定自己写一套，用来架设 Instagram 的网站。做出来以后，发现这套东西很好用，就在2013年5月开源了。WatchmanReact 通过 Watchman 来监视代码文件的改动并适时进行编译，就像 Xcode 在每次文件被保存时对文件进行编译。在 Terminal 中复制以下命令，跟随指引，将完成 Watchman 的安装brew install watchmanReact的安装在 Terminal 中复制以下命令，跟随指引，将完成 React 的安装npm install -g create-react-appAnt Design Ant Design 是一种设计语言，不单纯只是设计原则、控件规范和视觉尺寸，还配套有前端代码实现方案。也就是说采用 Ant Design 后，UI 设计和前端界面研发可同步完成，效率大大提升。目前有阿里、美团、滴滴、简书采用。 Ant Design 的安装brew install antGradle Gradle 是一个基于 JVM 的构建工具，支持 Maven ，Ivy 仓库，支持传递性依赖管理，而不需要远程仓库或者是 pom.xml 配置文件，基于Groovy，build脚本使用Groovy编写 Gradle 的安装在 Terminal 中复制以下命令，跟随指引，将完成 Gradle 的安装brew install gradle Gradle 的特性Gradle 提供了一些默认的 Tasks 给 Java 项目，比如，编译源代码、运行测试、打包 JAR .每一个 Java 项目都有一个标准的路径布局，这个布局定义了去哪里找项目的源代码、资源文件和测试代码，你也可以在配置中修改这些默认位置。Gradle 的约定类似于 Maven 的约定优于配置的实现，Maven 的约定就是一个项目只包含一个 Java 源代码路径，只产生一个 JAR 文件，对于企业级开发来讲这样是显然不够的，Gradle 允许你打破传统的观念，Gradle 的构建生命周期如下图：Spring Boot Spring Boot 是全新框架，是一些库的集合,它能够被任意项目的构建系统所使用,其设计目的是用来简化新Spring应用的初始搭建以及开发过程。Spring Boot的安装在 Terminal 中复制以下命令，跟随指引，将完成 Spring Boot 的安装brew install springbootSpring Boot的特性使用 Spring 项目引导页面可以在几秒构建一个项目方便对外输出各种形式的服务，如 REST API、WebSocket、Web、Streaming、Tasks非常简洁的安全策略集成支持关系数据库和非关系数据库支持运行期内嵌容器，如 Tomcat 、Jetty 强大的开发包，支持热启动自动管理依赖自带应用监控支持各种 IED ，如 IntelliJ IDEA 、NetBeans非常简洁的安全策略集成支持关系数据库和非关系数据库支持运行期内嵌容器，如 Tomcat、Jetty强大的开发包，支持热启动自动管理依赖自带应用监控支持各种 IED，如 IntelliJ IDEA 、NetBeans/li&gt;H2 Database H2 数据库是一个开源的、纯java实现的关系数据库 H2 数据库的安装在 Terminal 中复制以下命令，跟随指引，将完成 H2 数据库的安装brew install h2 H2 数据库的特点性能，小巧同时支持网络版和嵌入式版本，另外还提供了内存版有比较好的兼容性，支持相当标准的sql标准提供了非常友好的基于web的数据库管理界面]]></content>
      <categories>
        <category>工具文</category>
      </categories>
      <tags>
        <tag>Homebrew</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GetAway]]></title>
    <url>%2F2018%2F05%2F10%2Fgetaway%2F</url>
    <content type="text"><![CDATA[2018.5.10 Portland.ME 逃离波士顿 Getaway是 Cindy 偶然在 Instgram 上刷到的，正如官方宣传的一样，手工制作的小屋成为了让我们远离尘嚣的仙境。不奢求水帘洞一样的叹为观止，原木与落地窗的搭配让我们瞬间就爱上了这里。 Cabin 是拖拽式房车的设计，从它的四个轮子就能看出来。所有的供给（水+电）都又连接置车身的线缆所提供，仿佛把这里打造成了一个抵抗『后天』的避难所。 像原始人一样生火 官方提供了 starter 和充足的木头，看过详细的说明书，很快就能升起一座篝火。Cindy 和我从 Boston 带来了牛肉，鸡翅和红薯，自给自足的感觉让我们难以忘怀。 在森林里吃饭有一种奇妙的感觉，你会抱着某种期待，盼着会有松鼠和鹿来跟你讨要食物。但是我很快就阻止了自己的幻想，Massachusetts 的熊可不是什么可爱的小动物。 波特兰的灯塔不孤独 Bug Light 就像图中的一样伫立在 Portland 的海边，在这里可以欣赏到缅因州最大港口的天际线。 虽然 Bug Light Park 很小，但是来往渔船的络绎不绝让我们感受到了波特兰的海产盛况，于是我们决定去体验一下当地食物。 龙虾还是蛤蜊汤？ 和 Boston 一样，作为美国东北部的港口城市，波特兰最不可或缺的就是龙虾了。龙虾的烹饪方式有很多种，从清蒸到椒盐，从蒜蓉到龙虾汤，甚至是芝士焗松茸，令人眼花缭乱。我和 Cindy 最后还是选择了清蒸，一种最健康，最追寻食物本身味道的方式。 蛤蜊浓汤是我们每次吃海鲜的必备清单之一，作为新英格兰地区的特色菜肴，是一种以蛤蜊为主要材料，奶油为汤底，配以马铃薯及洋葱等配料的海鲜浓汤。每次给的小饼干我都吃不完。]]></content>
      <categories>
        <category>旅游文</category>
      </categories>
      <tags>
        <tag>Maine</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[In the US-Canada Border]]></title>
    <url>%2F2018%2F03%2F08%2Fniagarafall%2F</url>
    <content type="text"><![CDATA[2018.1.3 Buffalo.NY]]></content>
      <categories>
        <category>旅游文</category>
      </categories>
      <tags>
        <tag>New York</tag>
        <tag>Ohio</tag>
        <tag>Pennsylvania</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[On the Cruise]]></title>
    <url>%2F2018%2F01%2F03%2Fcruise%2F</url>
    <content type="text"><![CDATA[1.走！去巴尔的摩坐船！&nbsp;&nbsp;&nbsp;&nbsp;紧张的第一学期之后，迎接我们的除了波士顿的暴雪，还有长达三周的小寒假。其实早在 final 开始之前，我和 Cindy 就决定不浪费这个假期，好好规划一下路线，找个有意义的地方呆上一阵子。在综合考虑了天气状况，经济水平还有景点热度之后，最适合我们的选择就是搭上一条开往南方的船，直奔加勒比海，享受一下 Florida 的沙滩和鲜橙。&nbsp;&nbsp;&nbsp;&nbsp;Cindy 选中了一条由皇家加勒比提供的航线, 下面是我们的航线图。 Baltimore ➡️ Charleston ➡️ Orlando ➡️ Grand Bahama Island ➡️ Nassau &nbsp;&nbsp;&nbsp;&nbsp;因为时间关系，我们乘坐的是当天最早的一个航班，PS:你见过凌晨6点的 Boston 吗？🙃在这里吐槽一下 Spirit 雪碧航空，飞机小就算了，托运还要额外收费… Cindy 自从上了飞机就一睡不起了，这是她一直以来的习惯，我一直无法理解如此硌屁股的椅子她是怎么做到睡觉流口水的？🤔 &nbsp;&nbsp;&nbsp;&nbsp;抵达 Baltimore 之后，我们没有在机场久留，直接坐机场快轨前往市中心了。 North Carolina 给我的第一印象除了寒冷之外，就是黑人很多，比例明显高于 Boston。因为船只有下午12点后才能 Check in , 于是我们找了个 Subway 解决午饭问题。&nbsp;&nbsp;&nbsp;&nbsp;港口和市中心距离不是很远，当我们的车驶过一大片停车场之后，就能远远的望见这艘伫立在岸边的巨轮 – Grandeur of the Seas. 整个 Check in 的流程和机场一样，正规而又迅速，工作人员会根据你的护照 ID 来查询并核实订单信息。在上船之前，你会收到关于 deck plan 地图和船上活动的时间表，服务非常的贴心周到。 2.第一天是 Cruising &nbsp;&nbsp;&nbsp;&nbsp;我们的船舱在 Deck 4 的船首，属于甲板下带舷窗的小房间，房间装饰虽陈旧但却能看出用心装点过的样子。此外不得不感叹皇家加勒比提供的出色服务，每个船舱都配备有专业管家，从送早餐到打扫房间，他对于我们提出的所有的需求一直都是有求必应。&nbsp;&nbsp;&nbsp;&nbsp;管家还给我们留下了指南手册和逃生地图，根据传单上的内容：第一天的活动是 Crusing , 尽情的享受海洋的乐趣吧！ 在晚餐之前，船上工作人员在最大的演出厅召集了所有的乘客，为我们举办欢迎仪式和逃生演习，我们 Deck 4 属于 group 10，配备有专用的救生船，固定在母船的左侧。&nbsp;&nbsp;&nbsp;&nbsp; Grandeur of the Seas 是一艘20多岁的老船，从 center 的装修是可以很明显的看出来这一点，但是这并不影响她的豪华，第一次见到6排穿越了11层的高速电梯时，我还是被震惊到了。 Center 是一个活跃的地方，乘客服务中心设立在这，而且几乎所有你要去的船上设施都要经过这里。正因为 Center 视角开阔，有平整的大理石地面，我们还可以经常可以看到互动演出或者跳广场舞的美国大妈们。 &nbsp;&nbsp;&nbsp;&nbsp;The Great Gatsby是主餐厅之一，船上共3000名乘客，为了保障服务质量，晚餐被分成了两个用餐时段，我们选择的是5点30开始的。The Great Gatsby 的餐费是包括在了船票内的，算是所谓的团餐，但是质量上乘，服务生能记住你的名字和用餐习惯，甚至比波士顿餐厅周的某些$$$餐厅服务还要周到。&nbsp;&nbsp;&nbsp;&nbsp;我用图片墙的方式记录下了主餐厅的晚餐，刚一开始感觉种类丰富，但吃了几天临近下船的时候，才发现选择其实也就只有5，6种，只是不断的更改主食+ Sides +甜点的搭配。 3.8万人口的南卡首府&nbsp;&nbsp;&nbsp;&nbsp;一宿的颠簸后我们终于在第二天上午抵达 Charleston , 一个仅拥有8万人口的州首府。 Cindy 和我昨晚都睡得很糟糕，这一点并不是因为我们俩的『认床』习惯，而是由于我们的舱位在船首，比较颠簸，尤其是在夜间航行，在床上躺着的时候总会有一种被抛来抛去的感觉。😅&nbsp;&nbsp;&nbsp;&nbsp; Charleston 是南卡的一个沿海小镇，作为南卡罗来纳州的主要港口之一，除了有着排名世界前50的货物吞吐量，每年还会迎接大量的外地游客，当然旅游热季是夏天，我们在冬天抵达的时候，镇上几乎空无一人。&nbsp;&nbsp;&nbsp;&nbsp;在这个充满西班牙与墨西哥风情的小镇，到处流淌着从各类酒吧、咖啡馆里飘荡出的南欧或拉美的情歌。街道布局简洁明快，十分干净。路旁建筑物高度不超过三层，造型多姿多彩，尤其面向大海的度假屋更是风情万种，色彩斑斓但又显得统一而多样。这里是同性恋者的乐园，许多美国的商店小屋前挂着象征同性恋之家的六色彩旗和各式各样的彩色飘带，游人可以自由出入其中，感知同性恋者的生活片段。这里又是好莱坞制作影片的天然摄影棚，几乎每天都可见到美国影视界俊男靓女们的迷人身影。令人向往的海洋水族馆每天定时开放。棕榈树下蔚蓝色的小屋虽然因主人的离去显得有点忧伤，但它把那阳光下的蔚蓝溶进了大海，在大海波涛的吟咏中勃发出新的生机。 &nbsp;&nbsp;&nbsp;&nbsp; Charleston 是一个活泼的城市，每年在这里都会举办大量的文化节和演出活动。但是在万物萧瑟的隆冬之时，剩下的只有海滨公园的菠萝喷泉。菠萝喷泉虽小但是却造型奇特，一看就是出自怪才之手，它代表着 Charleston 的热情好客，曾多次入选全美最美的10大喷泉。 4.橘子州，世界最大的迪士尼&nbsp;&nbsp;&nbsp;&nbsp;知道船要停靠 Orlando 后 ，Cindy 和我开始兴奋地商量登陆后的旅游行程。我提议去环球影城，因为我还从来没去过那里，而且特别想去看霍格沃兹； Cindy持反对意见，她更倾向于 Disney World, 因为她想和我一起逛游乐场。在争执了一阵之后，我们一致决定去 Disney 并且理由充分，因为我爱她🐽。&nbsp;&nbsp;&nbsp;&nbsp;刚下船，我就开始后悔了，这分明是热带啊！微微潮湿的海风中，夹杂着一丝难得春意，最适短衣短裤直接上阵。据说全年都有阳光明媚的温和天气，正如其“阳光之州”的绰号所言，佛罗里达州中部保持着令人舒适的22.2摄氏度的年均气温。道路两旁种着笔直的一排椰子树，因为机场在海边，不远处还能眺望得到金色的沙滩，当日天空是一片晴朗，这里简直是完美的避寒度假胜地！ &nbsp;&nbsp;&nbsp;&nbsp;皇家加勒比贴心的安排了从码头直达 Disney World 的 shuttle bus ，我们在中午12点准时进园。因为 Cindy 提前在车上下载了 My Disney Experience ， 一个可以查询到游园的电子地图，超市位置和各场馆排队情况的 app . 一进园之后，我们直奔太空山，记得 Space Mountain 在东京迪士尼算是七大项目之一。 我们在城堡前的合影&nbsp;&nbsp;&nbsp;&nbsp;佛州的迪士尼因为是世界最大的迪士尼，是香港迪士尼的90倍大，堪称一座小型城市，所以又称迪士尼世界。我们这天只去了其中的迪士尼公园，也就是最普通的游乐场，但是如果再给我一次机会，我肯定会选择在这里住个两三天，把台风湖和动物世界都看个遍。 两袖清风的 Jeff 和 Cindy 的午饭&nbsp;&nbsp;&nbsp;&nbsp;在迪士尼的一天呆的意犹未尽，时间过的总是那么快，想起了小学毕业的那次旅行，看完迪士尼的烟花后的留恋不舍，想要一辈子都住在这里，把这里的一切都带回家去。船会在晚上9点启航，为了保证不会误船，我们必须在下午5点准时离开，所以我们在看完了花车表演后就坐着大巴回去了。 Youtube这是当时录制的花车视频 5.自由港，大巴哈马岛&nbsp;&nbsp;&nbsp;&nbsp;我们在岛西的 Freeport 停靠一天，因为天气状况良好，我和 Cindy 下船游览一下当地风光，顺便为第二天的潜水活动做一下采购，（我们计划次日在巴哈马首都拿骚浮潜）。这天太阳光照射很强，在这无烈日的寒冬里，让我心中第一次升起了对紫外线的胆怯。 Cindy 从当地人那里买了个草帽，我也戴着红袜队的经典棒球帽来遮阳。港口外是一片热闹的小型集市，充实着各种卖廉价手工艺品的个体户，基本所有的 local 都是黑人。我们买个了当地的新鲜椰子吃，摊主在我们喝完椰子汁后很热情的帮我们把椰肉抠了出来放在小碗里食用。PS: 不过感觉还没椰子水好喝🤨 &nbsp;&nbsp;&nbsp;&nbsp;在集市外有大巴提供接送服务，其实也就是围着不大的岛屿绕一圈而已，除了繁忙的工商业中心-自由港之外，大巴哈马岛其他的地方就是典型的热带自然风景了。岛上地势低平，气候温和，松树遍地，风景秀丽，是著名的疗养、游览胜地。海滨有洁白平整的沙滩，沙滩上搭着一座座茅草凉棚，供游客们乘凉、歇息。这里远离喧闹的大城市，显得十分恬静、安适，别有一番情趣。 &nbsp;&nbsp;&nbsp;&nbsp;巴哈马的沙滩和泰国的很像，海水是同样的蓝绿色，在阳光的照射下让人睁不开眼睛；沙子质量也很好，完全是纯白色的，没有任何污染，沙子颗粒非常细腻，摸起来有一种类似于橡皮泥一样柔润的感觉，如果用这种材料做沙雕应该会很有趣吧。在沙滩晒日光浴的基本都是老美，这就很明显能感受到美国人以胖著称的身材了，目光所到之处几乎没有一个匀称健美的。当然这点也许和他们自我的性格有关，彬彬有礼而又不拘小节。因为阳光太晒，我们没有在这里久留便回到船上去了。 6.在拿骚差点死掉&nbsp;&nbsp;&nbsp;&nbsp;作为巴哈马的首都及其繁荣的经济中心- Nassau，这里的氛围与大巴哈马岛屿有明显的不同。尽管殖民地时代的魅力在它身上还时有闪现，但古老的拿骚城已经迎来21世纪的第一缕新曙光。拿骚市中心有一条最富有历史感的街道——港湾街。英国乔治王时代的浅色建筑和造型奇特的木制办公公寓及店铺, 错落有致的分布在街道两旁。当你悠闲地坐在萨里式游览马车上，一边欣赏沿途而过的风景，一边聆听车夫讲述当地的轶事奇闻，一路上，您会看到数不清的历史遗址，古老的城堡，还有专为女王手工雕刻的楼梯。而庞贝博物馆陈列的艺术品，文献和画卷也在绘声绘色得述说着巴哈马数百年来的历史。 Youtube手机随拍&nbsp;&nbsp;&nbsp;&nbsp;这里也是购物者的天堂。收藏爱好者将在这里的交易市场发现独一无二的收藏品，这里还可以讨价还价。在拿骚，许多店铺售卖的各类免税名牌商品吸引了众多购物者的目光。漫步在巴哈马里维埃拉海滩，华彩闪耀，美丽宜人。这个迷人胜地位于城西3英里处，距金色沙滩只半英里远，乘公共汽车或出租很方便即可到达。&nbsp;&nbsp;&nbsp;&nbsp;由于天气过于炎热，Cindy 和我决定下午拜访里维埃拉海滩，事实证明，这个决定是个天大的错误。 Cindy 抓拍：一个寂寞的背影&nbsp;&nbsp;&nbsp;&nbsp;当天中午过后，天气由晴朗突然转成多云，就在我们出门后不久，天空开始下起了零星般的小雨，可是这并没有打消我们浮潜的念头。抵达海滩后，才发现这里看起来和想象中的不太一样，此时已经是乌云密布，很多人开始撤离了，但是我们依旧租了一个沙滩椅，把东西收拾好，就去岸边戏水了。可能由于是天气的原因，此时的海水温度比较凉，不太适合游泳，我们只能驻足在沙滩上，默默的玩沙子了。谁也没想到，在我弯腰去洗手的时候，有一股半人高的海浪从侧边向我打来，当我反应过来后，我的眼镜已经被海水卷走了。&nbsp;&nbsp;&nbsp;&nbsp;无奈的我们既不能玩浮潜又丢掉了眼镜，最终只能在沙滩上堆起了沙堡，下午3点钟的时候，我们再也忍受不了肆虐的海风，选择了回船避寒。 &nbsp;&nbsp;&nbsp;&nbsp;回到船上之后，我们当天就开始上吐下泻，后来我分析应该是在里维埃拉海滩患上了胃肠型感冒。船上的医务室给我们打了点滴，开了处方药，并把我们和正常乘客隔离了24小时后才允以放行，真是一段开(难)心(忘)的经历。 7.旅游总结&nbsp;&nbsp;&nbsp;&nbsp;这次巴哈马之行充满了各种各样的传奇经历，虽然有这愉快的片段，但是总体来说我还是收获了很多。毕竟9天花了1200刀去了这么多地方已经是非常的划算了。如果再给我一次机会，我同样会选择坐游轮出行，不过下次我会选一艘更大更新的船。&nbsp;&nbsp;&nbsp;&nbsp;接近两周的时间里，我和 Cindy 不但没有吵过一次架，而且还因为同样的患病经历给恋爱关系加上了新的标签”病友”，都说只有情侣一同出去旅行，才会发现能不能和的来，如果真是这么说，那么我觉得咱俩应该是分不开了@ Cindy. var options = {"narrow":false,"autoplay":true,"showlrc":3,"mutex":true,"music":[{"title":"Tonight I Celebrate My Love","author":"Christopher Peacock","url":"http://link.hhtjim.com/163/1196505.mp3","pic":"/pics/poster/tonighticelebrate.jpeg","lrc":"https://歌词.lrc"},{"title":"Always With Me","author":"木村弓 / 奥户巴寿","url":"http://link.hhtjim.com/163/5267808.mp3","pic":"/pics/poster/alwayswithme.jpg","lrc":"https://歌词.lrc"},{"title":"安静的午后","author":"Pianoboy高至豪","url":"http://link.hhtjim.com/163/139730.mp3","pic":"/pics/poster/安静的午后.jpg","lrc":"https://歌词.lrc"}]}; options.element = document.getElementById("aplayer-zsbyCsaH"); var ap = new APlayer(options); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>旅游文</category>
      </categories>
      <tags>
        <tag>Massachuset</tag>
        <tag>Florida</tag>
        <tag>Bahama</tag>
        <tag>South Carolina</tag>
        <tag>Orlando</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Provincetown]]></title>
    <url>%2F2017%2F11%2F03%2Fprovincetown%2F</url>
    <content type="text"><![CDATA[2017.11.3 Provincetown.MA 镰刀 VS 靴子 Cape Cod ，又称鳕鱼角，是位于麻省南部的一个半岛，从地图上看就像一把镰刀。Cape Cod 是美国东北部著名的度假胜地，Cindy 一直就想来这看看，这个周末难得两人都有时间，当即决定驱车前往。 全部都是彩虹色 Cape Cod 最有名的城市叫做 Provincetown ，除了慵懒的美式小镇风光，和海滨沙滩以及丰富的海产品以外，它还是美国著名的同性恋小镇。街道上是随处可见的彩虹旗帜，随便进入一家小店便是各种同性恋周边产品。 美式海鲜小店 由于是海边小镇，Cape Cod 的水产品是非常丰富的。然而，不像在中国，美国人对于海鲜的做法非常单一，基本上只有“煮”、“炸”，和做成“roll”几种。我们点了 Lobster Roll，Oyster Roll , 和Fried Oysters ，味道不好不坏，不能说是美食，但是用于饱腹和体验当地文化已是足以。 这家店在 Yelp 上排名第一，每个桌子都坐满了人，隔壁桌的美国大叔大妈们正在喝着啤酒畅谈。 走，一起去找灯塔！ 灯塔，总是伴随着孤独，神秘，永恒这样的字眼出现，以至于一提起灯塔，总不免有种浪漫的气息。而Cape Cod四面环海，灯塔数量众多，于我们而言是个“寻塔”的好地方。 在拿着 Google map 一番讨论后，我和 Cindy 决定去在 Cape Cod 最角落，也就是地图上镰刀尖位置的灯塔- Race Point Lighthouse. 两个赤脚大仙 我们跟着导航，开车到了沙滩的入口处。此时距离灯塔还非常远，可却已经没有了车能走的路，放眼望去尽是大海和沙滩。一开始，我们尝试着开车走沙滩，正巧我们开着越野车，还专门有一个 Sand 模式。不料，车还未全部进入沙滩，前轮就已经转不动了。无奈之下，我们只好把车停好，脱掉不方便的旅游鞋和靴子，徒步向灯塔的方向走去。 意犹未尽 天色渐晚，沙滩上的人并不多，晚风吹来，不免有些寒冷。沙粒也略有些坚硬，导致长时间走路后脚已经疼得快麻木了。不过我和 Cindy 的热情并没有被打消，时而去海里趟趟水，时而在沙滩上一起奔跑。 天不由人，在沙滩上走了快一个小时的时候，我们依旧没有见到灯塔的影子，而天色已经很晚了，沙滩上一个灯都没有。出于安全考虑，我们只好趁着天黑透前，快速原路返回。没看到灯塔是我们这次旅行最大的遗憾，不过也给我们下次再来留下了期待。]]></content>
      <categories>
        <category>旅游文</category>
      </categories>
      <tags>
        <tag>Massachuset</tag>
        <tag>Cape cod</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[White Mountain]]></title>
    <url>%2F2017%2F10%2F15%2Fwhitemt%2F</url>
    <content type="text"><![CDATA[2018.10.15 White mt.NH 停车坐爱枫林晚 在好友的怂恿下，我和 Cindy 决定在期中考试前的最后一个周末出发前往 New Hampshire 。 早闻白山森林公园的枫叶出名，尤其是在晚秋期间，是全美最好的赏枫区。白山距离波士顿3个小时车程，在我们刚驶入 New Hampshire 的时候，93号公路两旁已经依稀可见枫叶林的景观了。 林间小路，脚下是树叶地毯 虽然93号公路贯穿白山森林，而小路和公路相距不远，但是高大的树干和尚未掉落的黄色树叶把我们笼罩了起来, 甚是安静。 小路的人不多，依稀会有骑自行车爬坡的老美匆匆路过。走在厚厚的落叶上，旁边是小溪，不时会有松鼠冒出头来瞧着你，让人很是惬意。 纵谷小径 -grey”&gt;从93号公路下来就是著名的 Flume Gorge ，纵深800英尺，有令人印象深刻的自然景观，狭长的纵谷小径，以及无数瀑布与奇景，我们在这里和 Bear Cave 留下了合影。 一路走上去是小山顶，抬头看去上面是被枫叶染红的天空。这里虽高确不寒，也并不需要所谓的缆车，依旧可以够饱览白山的全貌。]]></content>
      <categories>
        <category>旅游文</category>
      </categories>
      <tags>
        <tag>New Hampshire</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F1995%2F09%2F06%2Fhelloworld%2F</url>
    <content type="text"><![CDATA[点首歌给你 var options = {"narrow":false,"autoplay":true,"showlrc":3,"mutex":true,"music":[{"title":"全部都是你","author":"Dragon Pig","url":"http://link.hhtjim.com/163/465920905.mp3","pic":"/pics/poster/全部都是你.jpg","lrc":"https://歌词.lrc"},{"title":"再也没有","author":"Ryan.B / AY楊佬叁","url":"http://link.hhtjim.com/163/480580003.mp3","pic":"/pics/poster/再也没有.jpg","lrc":"https://歌词.lrc"},{"title":"骄傲的少年","author":"南征北战","url":"http://link.hhtjim.com/163/408332757.mp3","pic":"/pics/poster/骄傲的少年.jpg","lrc":"https://歌词.lrc"},{"title":"骗自己PT.2","author":"AY杨老三 / Noor-99","url":"http://link.hhtjim.com/163/451169473.mp3","pic":"/pics/poster/骗自己.jpg","lrc":"https://歌词.lrc"},{"title":"不用去猜","author":"Jony J","url":"http://link.hhtjim.com/163/490595927.mp3","pic":"/pics/poster/不用去猜.jpg","lrc":"https://歌词.lrc"}]}; options.element = document.getElementById("aplayer-UbcifIhm"); var ap = new APlayer(options); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>个人分享</category>
      </categories>
      <tags>
        <tag>Music</tag>
        <tag>Jeff&#39;s recommendation</tag>
      </tags>
  </entry>
</search>
